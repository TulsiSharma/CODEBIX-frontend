{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Row } from 'reactstrap';\nimport Leftcomponent from \"./Leftcomponent\";\nimport Footer from \"./Footer\";\nimport Rightcomponent from \"./Rightcomponent\";\nimport base from \"./base\";\nimport { firebaseApp } from \"./base\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editor: {},\n      isopen: false,\n      savefiles: {},\n      mode: \"none\",\n      dropdownvalue: \"\",\n      issaved: false,\n      filename: \"\",\n      status: \"\",\n      id: null,\n      recent: {},\n      val: {},\n      length: -9999999999\n    };\n\n    this.savedlastfile = () => {};\n\n    this.updaterecent = () => {\n      const len = Object.keys(this.state.recent).length;\n\n      if (len < 5) {\n        let id = null;\n        let data = {};\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: this.state.editor.getValue(),\n            mode: this.state.dropdownvalue,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        let recent = { ...this.state.recent\n        };\n        recent[id] = data;\n        const final = {\n          mode: \"\",\n          fontsize: \"\",\n          recent: recent\n        };\n        localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n        this.setState({\n          recent\n        });\n      } else {\n        const index = Object.keys(this.state.recent)[0];\n        let recent = { ...this.state.recent\n        };\n        delete recent[index];\n        let id = null;\n        let data = {};\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: this.state.editor.getValue(),\n            mode: this.state.dropdownvalue,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        recent[id] = data;\n        const final = {\n          mode: \"\",\n          fontsize: \"\",\n          recent: recent\n        };\n        localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n        this.setState({\n          recent: recent\n        });\n      }\n    };\n\n    this.setid = val => {\n      this.setState({\n        id: val\n      });\n    };\n\n    this.setdropdown = val => {\n      this.setState({\n        dropdownvalue: val\n      });\n    };\n\n    this.setsaved = () => {\n      this.setState({\n        issaved: !this.state.issaved\n      });\n    };\n\n    this.updateeditor = id => {\n      if (id && this.state.savefiles[id]) {\n        const data = this.state.savefiles[id];\n        this.setid(id);\n        this.setsaved();\n        this.setdropdown(data.mode);\n        this.state.editor.setValue(data.content);\n\n        switch (data.mode) {\n          case \"C++\":\n            this.state.editor.setOption(\"mode\", \"text/x-c++src\");\n            break;\n\n          case \"C\":\n            this.state.editor.setOption(\"mode\", \"text/x-csrc\");\n            break;\n        }\n\n        this.updaterecent();\n        this.state.editor.on('change', cm => {\n          if (this.state.dropdownvalue === data.mode) {\n            data.content = cm.getValue();\n            this.updatevalue(id, data);\n          }\n        });\n      }\n    };\n\n    this.updatevalue = (key, val) => {\n      const savefiles = { ...this.state.savefiles\n      };\n      savefiles[key] = val;\n      this.setState({\n        savefiles: savefiles\n      });\n    };\n\n    this.setmode = val => {\n      this.setState({\n        mode: val\n      });\n    };\n\n    this.savefile = val => {\n      this.setState({\n        issaved: true\n      });\n      this.setstatus(\"Saving...\");\n      const data = {\n        name: val,\n        content: this.state.editor.getValue(),\n        status: \"saved\",\n        mode: this.state.mode\n      };\n      const savefiles = { ...this.state.savefiles\n      };\n      const id = Date.now();\n      this.setid(id);\n      savefiles[id] = data;\n      this.setState({\n        savefiles: savefiles\n      });\n      setTimeout(() => {\n        this.setstatus(data.name);\n        this.updaterecent();\n      }, 1000);\n      this.state.editor.on('change', cm => {\n        if (this.state.dropdownvalue === data.mode) {\n          this.setstatus(\"Saving...\");\n          data.content = cm.getValue();\n          this.updatevalue(id, data);\n          setTimeout(() => {\n            this.setstatus(data.name);\n          }, 1000);\n        }\n      });\n    };\n\n    this.seteditor = val => {\n      this.setState({\n        editor: val\n      });\n    };\n\n    this.settheme = val => {\n      this.state.editor.setOption(\"theme\", val);\n    };\n\n    this.settab = val => {\n      this.state.editor.setOption(\"indentUnit\", val);\n    };\n\n    this.setsize = val => {\n      this.state.editor.getWrapperElement().style[\"font-size\"] = val + \"px\";\n      this.state.editor.refresh();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isopen: !this.state.isopen\n      });\n    };\n\n    this.setstatus = val => {\n      // console.log(val);\n      this.setState({\n        status: val\n      });\n    };\n\n    this.setlength = len => {\n      this.setState({\n        length: len\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"/tulsisharma/savefiles\", {\n      context: this,\n      state: 'savefiles'\n    });\n    const res = localStorage.getItem(\"CodeBix\");\n\n    if (res) {\n      const val = JSON.parse(res);\n      console.log(val);\n      this.setState({\n        val: val\n      });\n      this.setState({\n        recent: val.recent\n      });\n    }\n\n    const id = this.props.match.params.id;\n\n    if (id) {\n      setTimeout(() => {\n        this.updateeditor(id);\n      }, 3400);\n    }\n  }\n\n  componentWillUnmount() {\n    this.updaterecent();\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const final = {\n      mode: \"\",\n      fontsize: \"\",\n      recent: this.state.recent\n    };\n    localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      settheme: this.settheme,\n      settab: this.settab,\n      setsize: this.setsize,\n      isopen: this.state.isopen,\n      savefile: this.savefile,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Leftcomponent, {\n      setlength: this.setlength,\n      length: this.state.length,\n      setsaved: this.setsaved,\n      editor: this.state.editor,\n      seteditor: this.seteditor,\n      toggle: this.toggle,\n      setmode: this.setmode,\n      setdropdown: this.setdropdown,\n      dropdownvalue: this.state.dropdownvalue,\n      issaved: this.state.issaved,\n      status: this.state.status,\n      setstatus: this.setstatus,\n      path: this.props.match.url,\n      id: this.state.id,\n      updaterecent: this.updaterecent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Rightcomponent, {\n      recent: this.state.recent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/App.js"],"names":["React","NavBar","Row","Leftcomponent","Footer","Rightcomponent","base","firebaseApp","App","Component","state","editor","isopen","savefiles","mode","dropdownvalue","issaved","filename","status","id","recent","val","length","savedlastfile","updaterecent","len","Object","keys","data","file","name","content","getValue","Date","now","final","fontsize","localStorage","setItem","JSON","stringify","setState","index","setid","setdropdown","setsaved","updateeditor","setValue","setOption","on","cm","updatevalue","key","setmode","savefile","setstatus","setTimeout","seteditor","settheme","settab","setsize","getWrapperElement","style","refresh","toggle","setlength","componentDidMount","ref","syncState","context","res","getItem","parse","console","log","props","match","params","componentWillUnmount","removeBinding","componentDidUpdate","render","paddingLeft","paddingRight","marginLeft","marginRight","url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {Row} from 'reactstrap';\r\nimport Leftcomponent from \"./Leftcomponent\";\r\nimport Footer from \"./Footer\";\r\nimport Rightcomponent from \"./Rightcomponent\";\r\nimport base from \"./base\";\r\nimport {firebaseApp} from \"./base\";\r\nclass App extends React.Component{\r\n    state={\r\n        editor:{},\r\n        isopen:false,\r\n        savefiles:{},\r\n        mode:\"none\",\r\n        dropdownvalue:\"\",\r\n        issaved:false,\r\n        filename:\"\",\r\n        status:\"\",\r\n        id:null,\r\n        recent:{},\r\n        val:{},\r\n        length:-9999999999\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.ref= base.syncState(\"/tulsisharma/savefiles\",{\r\n            context:this,\r\n            state:'savefiles'\r\n        });\r\n        const res=localStorage.getItem(\"CodeBix\");\r\n        if(res){\r\n            const val=JSON.parse(res);\r\n            console.log(val);\r\n            this.setState({val:val});\r\n            this.setState({recent:val.recent});\r\n        }\r\n\r\n        const id = this.props.match.params.id;\r\n        if(id){\r\n            setTimeout(() => {\r\n                this.updateeditor(id);\r\n            },3400);\r\n        }\r\n    }\r\n\r\n     componentWillUnmount(){\r\n         this.updaterecent();\r\n        base.removeBinding(this.ref);\r\n    }\r\n   \r\n    componentDidUpdate(){\r\n        const final={\r\n            mode:\"\",\r\n            fontsize:\"\",\r\n            recent:this.state.recent\r\n        }\r\n        localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n\r\n    }\r\n\r\n    savedlastfile=()=>{\r\n\r\n    }\r\n\r\n    updaterecent=()=>{\r\n        const len =Object.keys(this.state.recent).length;\r\n        if(len<5){\r\n            let id =null;\r\n            let data={};\r\n            if(!this.state.issaved){                \r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:this.state.editor.getValue(),\r\n                   mode:this.state.dropdownvalue,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            let recent={...this.state.recent};\r\n            recent[id]=data;\r\n            const final={\r\n                mode:\"\",\r\n                fontsize:\"\",\r\n                recent:recent\r\n            }\r\n            localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n            this.setState({recent});\r\n            \r\n        }\r\n        else{\r\n           const index= Object.keys(this.state.recent)[0];\r\n           let recent={...this.state.recent};\r\n           delete recent[index];\r\n           let id =null;\r\n            let data={};\r\n            if(!this.state.issaved){\r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:this.state.editor.getValue(),\r\n                   mode:this.state.dropdownvalue,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            recent[id]=data;\r\n            const final={\r\n                mode:\"\",\r\n                fontsize:\"\",\r\n                recent:recent\r\n            }\r\n            localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n            this.setState({recent:recent});\r\n            \r\n        }\r\n      \r\n    }\r\n\r\n    setid=(val)=>{\r\n        this.setState({id:val});\r\n    }\r\n    setdropdown=(val)=>{\r\n        this.setState({dropdownvalue:val});\r\n    }\r\n    setsaved=()=>{\r\n        this.setState({issaved:!this.state.issaved});\r\n    }\r\n\r\n    updateeditor=(id)=>{\r\n        if(id && this.state.savefiles[id]){\r\n            const data = this.state.savefiles[id];\r\n            this.setid(id);\r\n            this.setsaved();\r\n            this.setdropdown(data.mode);\r\n            this.state.editor.setValue(data.content);\r\n            switch (data.mode) {\r\n                case \"C++\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    break;\r\n                case \"C\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    break;\r\n            }\r\n            this.updaterecent();\r\n                \r\n            this.state.editor.on('change',(cm)=>{\r\n                if(this.state.dropdownvalue===data.mode){\r\n                    data.content=cm.getValue();\r\n                    this.updatevalue(id,data);\r\n                \r\n                }\r\n            });\r\n        \r\n        }\r\n    }\r\n\r\n    updatevalue=(key,val)=>{\r\n        const savefiles={...this.state.savefiles};\r\n        savefiles[key]=val;\r\n        this.setState({savefiles:savefiles});        \r\n    }\r\n\r\n    setmode=(val)=>{\r\n        this.setState({mode:val});\r\n    }\r\n    savefile=(val)=>{\r\n        this.setState({issaved:true});  \r\n        this.setstatus(\"Saving...\");\r\n        const data={\r\n            name:val,\r\n            content:this.state.editor.getValue(),\r\n            status:\"saved\",\r\n            mode:this.state.mode\r\n        }\r\n        const savefiles ={...this.state.savefiles};\r\n        const id =Date.now();\r\n        this.setid(id);\r\n        savefiles[id]=data;\r\n        this.setState({savefiles:savefiles});\r\n        setTimeout(() => {\r\n            this.setstatus(data.name);\r\n            this.updaterecent();\r\n        }, 1000);\r\n        \r\n        this.state.editor.on('change',(cm)=>{\r\n            if(this.state.dropdownvalue===data.mode){\r\n                this.setstatus(\"Saving...\");\r\n                data.content=cm.getValue();\r\n                this.updatevalue(id,data);\r\n                setTimeout(() => {\r\n                    this.setstatus(data.name);\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    seteditor=(val)=>{\r\n        this.setState({editor:val});\r\n    }\r\n    settheme=(val)=>{\r\n        this.state.editor.setOption(\"theme\",val);\r\n    }\r\n    settab=(val)=>{\r\n        this.state.editor.setOption(\"indentUnit\",val);\r\n    }\r\n    setsize=(val)=>{\r\n        this.state.editor.getWrapperElement().style[\"font-size\"]= val+\"px\";\r\n        this.state.editor.refresh();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({isopen:!this.state.isopen});   \r\n    }\r\n    setstatus=(val)=>{\r\n        // console.log(val);\r\n        this.setState({status:val});\r\n    }\r\n\r\n    setlength=(len)=>{\r\n        this.setState({length:len});\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\" style={{paddingLeft:\"0px\",paddingRight:\"0px\"}}>\r\n                <div className=\"main-wrapper\">\r\n                    <NavBar settheme={this.settheme} settab={this.settab} setsize={this.setsize} isopen={this.state.isopen} savefile={this.savefile} toggle={this.toggle}/>\r\n                    <div className=\"gap\"></div>\r\n                    <div className=\"\" style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                        <Row>\r\n                            <Leftcomponent setlength={this.setlength} length={this.state.length} setsaved={this.setsaved} editor={this.state.editor} seteditor={this.seteditor} toggle={this.toggle} setmode={this.setmode} setdropdown={this.setdropdown} dropdownvalue={this.state.dropdownvalue} issaved={this.state.issaved} status={this.state.status} setstatus={this.setstatus} path={this.props.match.url} id={this.state.id} updaterecent={this.updaterecent}/>\r\n                            <Rightcomponent recent={this.state.recent}/>\r\n                        </Row>\r\n                    </div>\r\n                    <br></br>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}