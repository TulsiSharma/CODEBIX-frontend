{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Row } from 'reactstrap';\nimport Leftcomponent from \"./Leftcomponent\";\nimport Footer from \"./Footer\";\nimport Rightcomponent from \"./Rightcomponent\";\nimport base from \"./base\";\nimport { firebaseApp } from \"./base\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editor: {},\n      isopen: false,\n      savefiles: {},\n      mode: \"none\",\n      dropdownvalue: \"\",\n      issaved: false,\n      filename: \"\",\n      status: \"\",\n      id: null,\n      recent: {},\n      val: {},\n      length: -9999999999\n    };\n\n    this.updaterecent = () => {\n      console.log(\"1\");\n      const len = Object.keys(this.state.recent).length;\n\n      if (len < 5) {\n        let id = null;\n        let data = {};\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: this.state.editor.getValue(),\n            mode: this.state.dropdownvalue,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        let recent = { ...this.state.recent\n        };\n        recent[id] = data;\n        const final = {\n          mode: \"\",\n          fontsize: \"\",\n          recent: recent\n        };\n        localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n        this.setState({\n          recent\n        });\n      } else {\n        const index = Object.keys(this.state.recent)[0];\n        let recent = { ...this.state.recent\n        };\n        delete recent[index];\n        let id = null;\n        let data = {};\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: this.state.editor.getValue(),\n            mode: this.state.dropdownvalue,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        recent[id] = data;\n        const final = {\n          mode: \"\",\n          fontsize: \"\",\n          recent: recent\n        };\n        localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n        this.setState({\n          recent: recent\n        });\n      }\n    };\n\n    this.setid = val => {\n      this.setState({\n        id: val\n      });\n    };\n\n    this.setdropdown = val => {\n      this.setState({\n        dropdownvalue: val\n      });\n    };\n\n    this.setsaved = () => {\n      this.setState({\n        issaved: !this.state.issaved\n      });\n    };\n\n    this.updateeditor = id => {\n      if (id && this.state.savefiles[id]) {\n        const data = this.state.savefiles[id];\n        this.setid(id);\n        this.setsaved();\n        this.setdropdown(data.mode);\n        this.state.editor.setValue(data.content);\n\n        switch (data.mode) {\n          case \"C++\":\n            this.state.editor.setOption(\"mode\", \"text/x-c++src\");\n            break;\n\n          case \"C\":\n            this.state.editor.setOption(\"mode\", \"text/x-csrc\");\n            break;\n        }\n\n        this.updaterecent();\n        this.state.editor.on('change', cm => {\n          if (this.state.dropdownvalue === data.mode) {\n            data.content = cm.getValue();\n            this.updatevalue(id, data);\n          }\n        });\n      }\n    };\n\n    this.updatevalue = (key, val) => {\n      const savefiles = { ...this.state.savefiles\n      };\n      savefiles[key] = val;\n      this.setState({\n        savefiles: savefiles\n      });\n    };\n\n    this.setmode = val => {\n      this.setState({\n        mode: val\n      });\n    };\n\n    this.savefile = val => {\n      this.setState({\n        issaved: true\n      });\n      this.setstatus(\"Saving...\");\n      const data = {\n        name: val,\n        content: this.state.editor.getValue(),\n        status: \"saved\",\n        mode: this.state.mode\n      };\n      const savefiles = { ...this.state.savefiles\n      };\n      const id = Date.now();\n      this.setid(id);\n      savefiles[id] = data;\n      this.setState({\n        savefiles: savefiles\n      });\n      setTimeout(() => {\n        this.setstatus(data.name);\n        this.updaterecent();\n      }, 1000);\n      this.state.editor.on('change', cm => {\n        if (this.state.dropdownvalue === data.mode) {\n          this.setstatus(\"Saving...\");\n          data.content = cm.getValue();\n          this.updatevalue(id, data);\n          setTimeout(() => {\n            this.setstatus(data.name);\n          }, 1000);\n        }\n      });\n    };\n\n    this.seteditor = val => {\n      this.setState({\n        editor: val\n      });\n    };\n\n    this.settheme = val => {\n      this.state.editor.setOption(\"theme\", val);\n    };\n\n    this.settab = val => {\n      this.state.editor.setOption(\"indentUnit\", val);\n    };\n\n    this.setsize = val => {\n      this.state.editor.getWrapperElement().style[\"font-size\"] = val + \"px\";\n      this.state.editor.refresh();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isopen: !this.state.isopen\n      });\n    };\n\n    this.setstatus = val => {\n      // console.log(val);\n      this.setState({\n        status: val\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"/tulsisharma/savefiles\", {\n      context: this,\n      state: 'savefiles'\n    });\n    const res = localStorage.getItem(\"CodeBix\");\n\n    if (res) {\n      const val = JSON.parse(res);\n      console.log(val);\n      this.setState({\n        val: val\n      });\n      this.setState({\n        recent: val.recent\n      });\n    }\n\n    const id = this.props.match.params.id;\n\n    if (id) {\n      setTimeout(() => {\n        this.updateeditor(id);\n      }, 3400);\n    }\n  }\n\n  componentWillUnmount() {\n    this.updaterecent();\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const final = {\n      mode: \"\",\n      fontsize: \"\",\n      recent: this.state.recent\n    };\n    localStorage.setItem(\"CodeBix\", JSON.stringify(final));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      settheme: this.settheme,\n      settab: this.settab,\n      setsize: this.setsize,\n      isopen: this.state.isopen,\n      savefile: this.savefile,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Leftcomponent, {\n      setsaved: this.setsaved,\n      editor: this.state.editor,\n      seteditor: this.seteditor,\n      toggle: this.toggle,\n      setmode: this.setmode,\n      setdropdown: this.setdropdown,\n      dropdownvalue: this.state.dropdownvalue,\n      issaved: this.state.issaved,\n      status: this.state.status,\n      setstatus: this.setstatus,\n      path: this.props.match.url,\n      id: this.state.id,\n      updaterecent: this.updaterecent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Rightcomponent, {\n      recent: this.state.recent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/App.js"],"names":["React","NavBar","Row","Leftcomponent","Footer","Rightcomponent","base","firebaseApp","App","Component","state","editor","isopen","savefiles","mode","dropdownvalue","issaved","filename","status","id","recent","val","length","updaterecent","console","log","len","Object","keys","data","file","name","content","getValue","Date","now","final","fontsize","localStorage","setItem","JSON","stringify","setState","index","setid","setdropdown","setsaved","updateeditor","setValue","setOption","on","cm","updatevalue","key","setmode","savefile","setstatus","setTimeout","seteditor","settheme","settab","setsize","getWrapperElement","style","refresh","toggle","componentDidMount","ref","syncState","context","res","getItem","parse","props","match","params","componentWillUnmount","removeBinding","componentDidUpdate","render","paddingLeft","paddingRight","marginLeft","marginRight","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AACA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACvB;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,MAAM,EAAC,KAFL;AAGFC,MAAAA,SAAS,EAAC,EAHR;AAIFC,MAAAA,IAAI,EAAC,MAJH;AAKFC,MAAAA,aAAa,EAAC,EALZ;AAMFC,MAAAA,OAAO,EAAC,KANN;AAOFC,MAAAA,QAAQ,EAAC,EAPP;AAQFC,MAAAA,MAAM,EAAC,EARL;AASFC,MAAAA,EAAE,EAAC,IATD;AAUFC,MAAAA,MAAM,EAAC,EAVL;AAWFC,MAAAA,GAAG,EAAC,EAXF;AAYFC,MAAAA,MAAM,EAAC,CAAC;AAZN,KADuB;;AAAA,SAqD7BC,YArD6B,GAqDhB,MAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,YAAMC,GAAG,GAAEC,MAAM,CAACC,IAAP,CAAY,KAAKlB,KAAL,CAAWU,MAAvB,EAA+BE,MAA1C;;AACA,UAAGI,GAAG,GAAC,CAAP,EAAS;AACL,YAAIP,EAAE,GAAE,IAAR;AACA,YAAIU,IAAI,GAAC,EAAT;;AACA,YAAG,CAAC,KAAKnB,KAAL,CAAWM,OAAf,EAAuB;AACpB,gBAAMc,IAAI,GAAC;AACPC,YAAAA,IAAI,EAAC,SADE;AAEPC,YAAAA,OAAO,EAAC,KAAKtB,KAAL,CAAWC,MAAX,CAAkBsB,QAAlB,EAFD;AAGPnB,YAAAA,IAAI,EAAC,KAAKJ,KAAL,CAAWK,aAHT;AAIPG,YAAAA,MAAM,EAAC;AAJA,WAAX;AAMAC,UAAAA,EAAE,GAACe,IAAI,CAACC,GAAL,EAAH;AACAN,UAAAA,IAAI,GAACC,IAAL;AACF,SATD,MAUI;AACAX,UAAAA,EAAE,GAAC,KAAKT,KAAL,CAAWS,EAAd;AACDU,UAAAA,IAAI,GAAC,KAAKnB,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWS,EAAhC,CAAL;AACF;;AACD,YAAIC,MAAM,GAAC,EAAC,GAAG,KAAKV,KAAL,CAAWU;AAAf,SAAX;AACAA,QAAAA,MAAM,CAACD,EAAD,CAAN,GAAWU,IAAX;AACA,cAAMO,KAAK,GAAC;AACRtB,UAAAA,IAAI,EAAC,EADG;AAERuB,UAAAA,QAAQ,EAAC,EAFD;AAGRjB,UAAAA,MAAM,EAACA;AAHC,SAAZ;AAKAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA/B;AACA,aAAKM,QAAL,CAAc;AAACtB,UAAAA;AAAD,SAAd;AAEH,OA3BD,MA4BI;AACD,cAAMuB,KAAK,GAAEhB,MAAM,CAACC,IAAP,CAAY,KAAKlB,KAAL,CAAWU,MAAvB,EAA+B,CAA/B,CAAb;AACA,YAAIA,MAAM,GAAC,EAAC,GAAG,KAAKV,KAAL,CAAWU;AAAf,SAAX;AACA,eAAOA,MAAM,CAACuB,KAAD,CAAb;AACA,YAAIxB,EAAE,GAAE,IAAR;AACC,YAAIU,IAAI,GAAC,EAAT;;AACA,YAAG,CAAC,KAAKnB,KAAL,CAAWM,OAAf,EAAuB;AACpB,gBAAMc,IAAI,GAAC;AACPC,YAAAA,IAAI,EAAC,SADE;AAEPC,YAAAA,OAAO,EAAC,KAAKtB,KAAL,CAAWC,MAAX,CAAkBsB,QAAlB,EAFD;AAGPnB,YAAAA,IAAI,EAAC,KAAKJ,KAAL,CAAWK,aAHT;AAIPG,YAAAA,MAAM,EAAC;AAJA,WAAX;AAMAC,UAAAA,EAAE,GAACe,IAAI,CAACC,GAAL,EAAH;AACAN,UAAAA,IAAI,GAACC,IAAL;AACF,SATD,MAUI;AACAX,UAAAA,EAAE,GAAC,KAAKT,KAAL,CAAWS,EAAd;AACDU,UAAAA,IAAI,GAAC,KAAKnB,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWS,EAAhC,CAAL;AACF;;AACDC,QAAAA,MAAM,CAACD,EAAD,CAAN,GAAWU,IAAX;AACA,cAAMO,KAAK,GAAC;AACRtB,UAAAA,IAAI,EAAC,EADG;AAERuB,UAAAA,QAAQ,EAAC,EAFD;AAGRjB,UAAAA,MAAM,EAACA;AAHC,SAAZ;AAKAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA/B;AACA,aAAKM,QAAL,CAAc;AAACtB,UAAAA,MAAM,EAACA;AAAR,SAAd;AAEH;AAEJ,KAnH4B;;AAAA,SAqH7BwB,KArH6B,GAqHtBvB,GAAD,IAAO;AACT,WAAKqB,QAAL,CAAc;AAACvB,QAAAA,EAAE,EAACE;AAAJ,OAAd;AACH,KAvH4B;;AAAA,SAwH7BwB,WAxH6B,GAwHhBxB,GAAD,IAAO;AACf,WAAKqB,QAAL,CAAc;AAAC3B,QAAAA,aAAa,EAACM;AAAf,OAAd;AACH,KA1H4B;;AAAA,SA2H7ByB,QA3H6B,GA2HpB,MAAI;AACT,WAAKJ,QAAL,CAAc;AAAC1B,QAAAA,OAAO,EAAC,CAAC,KAAKN,KAAL,CAAWM;AAArB,OAAd;AACH,KA7H4B;;AAAA,SA+H7B+B,YA/H6B,GA+Hf5B,EAAD,IAAM;AACf,UAAGA,EAAE,IAAI,KAAKT,KAAL,CAAWG,SAAX,CAAqBM,EAArB,CAAT,EAAkC;AAC9B,cAAMU,IAAI,GAAG,KAAKnB,KAAL,CAAWG,SAAX,CAAqBM,EAArB,CAAb;AACA,aAAKyB,KAAL,CAAWzB,EAAX;AACA,aAAK2B,QAAL;AACA,aAAKD,WAAL,CAAiBhB,IAAI,CAACf,IAAtB;AACA,aAAKJ,KAAL,CAAWC,MAAX,CAAkBqC,QAAlB,CAA2BnB,IAAI,CAACG,OAAhC;;AACA,gBAAQH,IAAI,CAACf,IAAb;AACI,eAAK,KAAL;AACI,iBAAKJ,KAAL,CAAWC,MAAX,CAAkBsC,SAAlB,CAA4B,MAA5B,EAAmC,eAAnC;AACA;;AACJ,eAAK,GAAL;AACI,iBAAKvC,KAAL,CAAWC,MAAX,CAAkBsC,SAAlB,CAA4B,MAA5B,EAAmC,aAAnC;AACA;AANR;;AAQA,aAAK1B,YAAL;AAEA,aAAKb,KAAL,CAAWC,MAAX,CAAkBuC,EAAlB,CAAqB,QAArB,EAA+BC,EAAD,IAAM;AAChC,cAAG,KAAKzC,KAAL,CAAWK,aAAX,KAA2Bc,IAAI,CAACf,IAAnC,EAAwC;AACpCe,YAAAA,IAAI,CAACG,OAAL,GAAamB,EAAE,CAAClB,QAAH,EAAb;AACA,iBAAKmB,WAAL,CAAiBjC,EAAjB,EAAoBU,IAApB;AAEH;AACJ,SAND;AAQH;AACJ,KAzJ4B;;AAAA,SA2J7BuB,WA3J6B,GA2JjB,CAACC,GAAD,EAAKhC,GAAL,KAAW;AACnB,YAAMR,SAAS,GAAC,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAhB;AACAA,MAAAA,SAAS,CAACwC,GAAD,CAAT,GAAehC,GAAf;AACA,WAAKqB,QAAL,CAAc;AAAC7B,QAAAA,SAAS,EAACA;AAAX,OAAd;AACH,KA/J4B;;AAAA,SAiK7ByC,OAjK6B,GAiKpBjC,GAAD,IAAO;AACX,WAAKqB,QAAL,CAAc;AAAC5B,QAAAA,IAAI,EAACO;AAAN,OAAd;AACH,KAnK4B;;AAAA,SAoK7BkC,QApK6B,GAoKnBlC,GAAD,IAAO;AACZ,WAAKqB,QAAL,CAAc;AAAC1B,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,WAAKwC,SAAL,CAAe,WAAf;AACA,YAAM3B,IAAI,GAAC;AACPE,QAAAA,IAAI,EAACV,GADE;AAEPW,QAAAA,OAAO,EAAC,KAAKtB,KAAL,CAAWC,MAAX,CAAkBsB,QAAlB,EAFD;AAGPf,QAAAA,MAAM,EAAC,OAHA;AAIPJ,QAAAA,IAAI,EAAC,KAAKJ,KAAL,CAAWI;AAJT,OAAX;AAMA,YAAMD,SAAS,GAAE,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAjB;AACA,YAAMM,EAAE,GAAEe,IAAI,CAACC,GAAL,EAAV;AACA,WAAKS,KAAL,CAAWzB,EAAX;AACAN,MAAAA,SAAS,CAACM,EAAD,CAAT,GAAcU,IAAd;AACA,WAAKa,QAAL,CAAc;AAAC7B,QAAAA,SAAS,EAACA;AAAX,OAAd;AACA4C,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKD,SAAL,CAAe3B,IAAI,CAACE,IAApB;AACA,aAAKR,YAAL;AACH,OAHS,EAGP,IAHO,CAAV;AAKA,WAAKb,KAAL,CAAWC,MAAX,CAAkBuC,EAAlB,CAAqB,QAArB,EAA+BC,EAAD,IAAM;AAChC,YAAG,KAAKzC,KAAL,CAAWK,aAAX,KAA2Bc,IAAI,CAACf,IAAnC,EAAwC;AACpC,eAAK0C,SAAL,CAAe,WAAf;AACA3B,UAAAA,IAAI,CAACG,OAAL,GAAamB,EAAE,CAAClB,QAAH,EAAb;AACA,eAAKmB,WAAL,CAAiBjC,EAAjB,EAAoBU,IAApB;AACA4B,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKD,SAAL,CAAe3B,IAAI,CAACE,IAApB;AACH,WAFS,EAEP,IAFO,CAAV;AAIH;AACJ,OAVD;AAWH,KAlM4B;;AAAA,SAmM7B2B,SAnM6B,GAmMlBrC,GAAD,IAAO;AACb,WAAKqB,QAAL,CAAc;AAAC/B,QAAAA,MAAM,EAACU;AAAR,OAAd;AACH,KArM4B;;AAAA,SAsM7BsC,QAtM6B,GAsMnBtC,GAAD,IAAO;AACZ,WAAKX,KAAL,CAAWC,MAAX,CAAkBsC,SAAlB,CAA4B,OAA5B,EAAoC5B,GAApC;AACH,KAxM4B;;AAAA,SAyM7BuC,MAzM6B,GAyMrBvC,GAAD,IAAO;AACV,WAAKX,KAAL,CAAWC,MAAX,CAAkBsC,SAAlB,CAA4B,YAA5B,EAAyC5B,GAAzC;AACH,KA3M4B;;AAAA,SA4M7BwC,OA5M6B,GA4MpBxC,GAAD,IAAO;AACX,WAAKX,KAAL,CAAWC,MAAX,CAAkBmD,iBAAlB,GAAsCC,KAAtC,CAA4C,WAA5C,IAA0D1C,GAAG,GAAC,IAA9D;AACA,WAAKX,KAAL,CAAWC,MAAX,CAAkBqD,OAAlB;AACH,KA/M4B;;AAAA,SAgN7BC,MAhN6B,GAgNtB,MAAI;AACP,WAAKvB,QAAL,CAAc;AAAC9B,QAAAA,MAAM,EAAC,CAAC,KAAKF,KAAL,CAAWE;AAApB,OAAd;AACH,KAlN4B;;AAAA,SAmN7B4C,SAnN6B,GAmNlBnC,GAAD,IAAO;AACb;AACA,WAAKqB,QAAL,CAAc;AAACxB,QAAAA,MAAM,EAACG;AAAR,OAAd;AACH,KAtN4B;AAAA;;AAiB7B6C,EAAAA,iBAAiB,GAAE;AACf,SAAKC,GAAL,GAAU7D,IAAI,CAAC8D,SAAL,CAAe,wBAAf,EAAwC;AAC9CC,MAAAA,OAAO,EAAC,IADsC;AAE9C3D,MAAAA,KAAK,EAAC;AAFwC,KAAxC,CAAV;AAIA,UAAM4D,GAAG,GAAChC,YAAY,CAACiC,OAAb,CAAqB,SAArB,CAAV;;AACA,QAAGD,GAAH,EAAO;AACH,YAAMjD,GAAG,GAACmB,IAAI,CAACgC,KAAL,CAAWF,GAAX,CAAV;AACA9C,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,WAAKqB,QAAL,CAAc;AAACrB,QAAAA,GAAG,EAACA;AAAL,OAAd;AACA,WAAKqB,QAAL,CAAc;AAACtB,QAAAA,MAAM,EAACC,GAAG,CAACD;AAAZ,OAAd;AACH;;AAED,UAAMD,EAAE,GAAG,KAAKsD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBxD,EAAnC;;AACA,QAAGA,EAAH,EAAM;AACFsC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKV,YAAL,CAAkB5B,EAAlB;AACH,OAFS,EAER,IAFQ,CAAV;AAGH;AACJ;;AAEAyD,EAAAA,oBAAoB,GAAE;AAClB,SAAKrD,YAAL;AACDjB,IAAAA,IAAI,CAACuE,aAAL,CAAmB,KAAKV,GAAxB;AACH;;AAEDW,EAAAA,kBAAkB,GAAE;AAChB,UAAM1C,KAAK,GAAC;AACRtB,MAAAA,IAAI,EAAC,EADG;AAERuB,MAAAA,QAAQ,EAAC,EAFD;AAGRjB,MAAAA,MAAM,EAAC,KAAKV,KAAL,CAAWU;AAHV,KAAZ;AAKAkB,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA/B;AAEH;;AAoKD2C,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAC,KAAb;AAAmBC,QAAAA,YAAY,EAAC;AAAhC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKtB,QAAvB;AAAiC,MAAA,MAAM,EAAE,KAAKC,MAA9C;AAAsD,MAAA,OAAO,EAAE,KAAKC,OAApE;AAA6E,MAAA,MAAM,EAAE,KAAKnD,KAAL,CAAWE,MAAhG;AAAwG,MAAA,QAAQ,EAAE,KAAK2C,QAAvH;AAAiI,MAAA,MAAM,EAAE,KAAKU,MAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAkB,MAAA,KAAK,EAAE;AAACiB,QAAAA,UAAU,EAAC,MAAZ;AAAmBC,QAAAA,WAAW,EAAC;AAA/B,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKrC,QAA9B;AAAwC,MAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWC,MAA3D;AAAmE,MAAA,SAAS,EAAE,KAAK+C,SAAnF;AAA8F,MAAA,MAAM,EAAE,KAAKO,MAA3G;AAAmH,MAAA,OAAO,EAAE,KAAKX,OAAjI;AAA0I,MAAA,WAAW,EAAE,KAAKT,WAA5J;AAAyK,MAAA,aAAa,EAAE,KAAKnC,KAAL,CAAWK,aAAnM;AAAkN,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAAtO;AAA+O,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWQ,MAAlQ;AAA0Q,MAAA,SAAS,EAAE,KAAKsC,SAA1R;AAAqS,MAAA,IAAI,EAAE,KAAKiB,KAAL,CAAWC,KAAX,CAAiBU,GAA5T;AAAiU,MAAA,EAAE,EAAE,KAAK1E,KAAL,CAAWS,EAAhV;AAAoV,MAAA,YAAY,EAAE,KAAKI,YAAvW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWU,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAHJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ;AAgBH;;AAxO4B;;AA2OjC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {Row} from 'reactstrap';\r\nimport Leftcomponent from \"./Leftcomponent\";\r\nimport Footer from \"./Footer\";\r\nimport Rightcomponent from \"./Rightcomponent\";\r\nimport base from \"./base\";\r\nimport {firebaseApp} from \"./base\";\r\nclass App extends React.Component{\r\n    state={\r\n        editor:{},\r\n        isopen:false,\r\n        savefiles:{},\r\n        mode:\"none\",\r\n        dropdownvalue:\"\",\r\n        issaved:false,\r\n        filename:\"\",\r\n        status:\"\",\r\n        id:null,\r\n        recent:{},\r\n        val:{},\r\n        length:-9999999999\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.ref= base.syncState(\"/tulsisharma/savefiles\",{\r\n            context:this,\r\n            state:'savefiles'\r\n        });\r\n        const res=localStorage.getItem(\"CodeBix\");\r\n        if(res){\r\n            const val=JSON.parse(res);\r\n            console.log(val);\r\n            this.setState({val:val});\r\n            this.setState({recent:val.recent});\r\n        }\r\n\r\n        const id = this.props.match.params.id;\r\n        if(id){\r\n            setTimeout(() => {\r\n                this.updateeditor(id);\r\n            },3400);\r\n        }\r\n    }\r\n\r\n     componentWillUnmount(){\r\n         this.updaterecent();\r\n        base.removeBinding(this.ref);\r\n    }\r\n   \r\n    componentDidUpdate(){\r\n        const final={\r\n            mode:\"\",\r\n            fontsize:\"\",\r\n            recent:this.state.recent\r\n        }\r\n        localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n\r\n    }\r\n\r\n    updaterecent=()=>{\r\n        console.log(\"1\");\r\n        const len =Object.keys(this.state.recent).length;\r\n        if(len<5){\r\n            let id =null;\r\n            let data={};\r\n            if(!this.state.issaved){                \r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:this.state.editor.getValue(),\r\n                   mode:this.state.dropdownvalue,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            let recent={...this.state.recent};\r\n            recent[id]=data;\r\n            const final={\r\n                mode:\"\",\r\n                fontsize:\"\",\r\n                recent:recent\r\n            }\r\n            localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n            this.setState({recent});\r\n            \r\n        }\r\n        else{\r\n           const index= Object.keys(this.state.recent)[0];\r\n           let recent={...this.state.recent};\r\n           delete recent[index];\r\n           let id =null;\r\n            let data={};\r\n            if(!this.state.issaved){\r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:this.state.editor.getValue(),\r\n                   mode:this.state.dropdownvalue,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            recent[id]=data;\r\n            const final={\r\n                mode:\"\",\r\n                fontsize:\"\",\r\n                recent:recent\r\n            }\r\n            localStorage.setItem(\"CodeBix\",JSON.stringify(final));\r\n            this.setState({recent:recent});\r\n            \r\n        }\r\n      \r\n    }\r\n\r\n    setid=(val)=>{\r\n        this.setState({id:val});\r\n    }\r\n    setdropdown=(val)=>{\r\n        this.setState({dropdownvalue:val});\r\n    }\r\n    setsaved=()=>{\r\n        this.setState({issaved:!this.state.issaved});\r\n    }\r\n\r\n    updateeditor=(id)=>{\r\n        if(id && this.state.savefiles[id]){\r\n            const data = this.state.savefiles[id];\r\n            this.setid(id);\r\n            this.setsaved();\r\n            this.setdropdown(data.mode);\r\n            this.state.editor.setValue(data.content);\r\n            switch (data.mode) {\r\n                case \"C++\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    break;\r\n                case \"C\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    break;\r\n            }\r\n            this.updaterecent();\r\n                \r\n            this.state.editor.on('change',(cm)=>{\r\n                if(this.state.dropdownvalue===data.mode){\r\n                    data.content=cm.getValue();\r\n                    this.updatevalue(id,data);\r\n                \r\n                }\r\n            });\r\n        \r\n        }\r\n    }\r\n\r\n    updatevalue=(key,val)=>{\r\n        const savefiles={...this.state.savefiles};\r\n        savefiles[key]=val;\r\n        this.setState({savefiles:savefiles});        \r\n    }\r\n\r\n    setmode=(val)=>{\r\n        this.setState({mode:val});\r\n    }\r\n    savefile=(val)=>{\r\n        this.setState({issaved:true});  \r\n        this.setstatus(\"Saving...\");\r\n        const data={\r\n            name:val,\r\n            content:this.state.editor.getValue(),\r\n            status:\"saved\",\r\n            mode:this.state.mode\r\n        }\r\n        const savefiles ={...this.state.savefiles};\r\n        const id =Date.now();\r\n        this.setid(id);\r\n        savefiles[id]=data;\r\n        this.setState({savefiles:savefiles});\r\n        setTimeout(() => {\r\n            this.setstatus(data.name);\r\n            this.updaterecent();\r\n        }, 1000);\r\n        \r\n        this.state.editor.on('change',(cm)=>{\r\n            if(this.state.dropdownvalue===data.mode){\r\n                this.setstatus(\"Saving...\");\r\n                data.content=cm.getValue();\r\n                this.updatevalue(id,data);\r\n                setTimeout(() => {\r\n                    this.setstatus(data.name);\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    seteditor=(val)=>{\r\n        this.setState({editor:val});\r\n    }\r\n    settheme=(val)=>{\r\n        this.state.editor.setOption(\"theme\",val);\r\n    }\r\n    settab=(val)=>{\r\n        this.state.editor.setOption(\"indentUnit\",val);\r\n    }\r\n    setsize=(val)=>{\r\n        this.state.editor.getWrapperElement().style[\"font-size\"]= val+\"px\";\r\n        this.state.editor.refresh();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({isopen:!this.state.isopen});   \r\n    }\r\n    setstatus=(val)=>{\r\n        // console.log(val);\r\n        this.setState({status:val});\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\" style={{paddingLeft:\"0px\",paddingRight:\"0px\"}}>\r\n                <div className=\"main-wrapper\">\r\n                    <NavBar settheme={this.settheme} settab={this.settab} setsize={this.setsize} isopen={this.state.isopen} savefile={this.savefile} toggle={this.toggle}/>\r\n                    <div className=\"gap\"></div>\r\n                    <div className=\"\" style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                        <Row>\r\n                            <Leftcomponent setsaved={this.setsaved} editor={this.state.editor} seteditor={this.seteditor} toggle={this.toggle} setmode={this.setmode} setdropdown={this.setdropdown} dropdownvalue={this.state.dropdownvalue} issaved={this.state.issaved} status={this.state.status} setstatus={this.setstatus} path={this.props.match.url} id={this.state.id} updaterecent={this.updaterecent}/>\r\n                            <Rightcomponent recent={this.state.recent}/>\r\n                        </Row>\r\n                    </div>\r\n                    <br></br>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}