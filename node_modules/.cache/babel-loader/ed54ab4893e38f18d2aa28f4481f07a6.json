{"ast":null,"code":"import _classCallCheck from\"E:\\\\Internship Project\\\\codebix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\Internship Project\\\\codebix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\Internship Project\\\\codebix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\Internship Project\\\\codebix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Button,Modal,ModalHeader,ModalBody,InputGroup,InputGroupAddon}from'reactstrap';var Share=/*#__PURE__*/function(_React$Component){_inherits(Share,_React$Component);var _super=_createSuper(Share);function Share(){var _this;_classCallCheck(this,Share);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.inputRef=React.createRef();_this.handleclick=function(event){var input=_this.inputRef.current;input.select();document.execCommand(\"copy\");};return _this;}_createClass(Share,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{isOpen:this.props.isShare,toggle:function toggle(){return _this2.props.setshare();}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this2.props.setshare();},charCode:\"X\"},\"Shareable Link\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:this.inputRef,style:{width:\"75%\",height:\"40px\"},value:\"\".concat(this.props.path)+\"/\"+\"\".concat(this.props.id)}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:this.handleclick},\"Copy Link\"))))));}}]);return Share;}(React.Component);export default Share;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/Share.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","InputGroup","InputGroupAddon","Share","inputRef","createRef","handleclick","event","input","current","select","document","execCommand","props","isShare","setshare","width","height","path","id","Component"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,WAAxB,CAAqCC,SAArC,CAA+CC,UAA/C,CAA2DC,eAA3D,KAAkF,YAAlF,C,GACMC,CAAAA,K,mUACFC,Q,CAASR,KAAK,CAACS,SAAN,E,OACTC,W,CAAY,SAACC,KAAD,CAAS,CACjB,GAAMC,CAAAA,KAAK,CAAC,MAAKJ,QAAL,CAAcK,OAA1B,CACAD,KAAK,CAACE,MAAN,GACAC,QAAQ,CAACC,WAAT,CAAqB,MAArB,EACH,C,wEACO,iBACJ,mBACI,4CACI,oBAAC,KAAD,EAAO,MAAM,CAAE,KAAKC,KAAL,CAAWC,OAA1B,CAAmC,MAAM,CAAE,wBAAI,CAAA,MAAI,CAACD,KAAL,CAAWE,QAAX,EAAJ,EAA3C,eACI,oBAAC,WAAD,EAAa,MAAM,CAAE,wBAAI,CAAA,MAAI,CAACF,KAAL,CAAWE,QAAX,EAAJ,EAArB,CAAgD,QAAQ,CAAC,GAAzD,mBADJ,cAEI,oBAAC,SAAD,mBACI,oBAAC,UAAD,mBACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAE,KAAKX,QAA7B,CAAuC,KAAK,CAAE,CAACY,KAAK,CAAC,KAAP,CAAaC,MAAM,CAAC,MAApB,CAA9C,CAA2E,KAAK,CAAE,UAAG,KAAKJ,KAAL,CAAWK,IAAd,gBAA4B,KAAKL,KAAL,CAAWM,EAAvC,CAAlF,EADJ,cAEI,oBAAC,eAAD,EAAiB,SAAS,CAAC,QAA3B,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,OAAO,CAAE,KAAKb,WAAxC,cADJ,CAFJ,CADJ,CAFJ,CADJ,CADJ,CAeH,C,mBAvBeV,KAAK,CAACwB,S,EAyB1B,cAAejB,CAAAA,KAAf","sourcesContent":["import React from \"react\"\r\nimport { Button, Modal, ModalHeader, ModalBody,InputGroup, InputGroupAddon } from 'reactstrap';\r\nclass Share extends React.Component{\r\n    inputRef=React.createRef();\r\n    handleclick=(event)=>{\r\n        const input=this.inputRef.current;\r\n        input.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.isShare} toggle={()=>this.props.setshare()}>\r\n                    <ModalHeader toggle={()=>this.props.setshare()} charCode=\"X\">Shareable Link</ModalHeader>\r\n                    <ModalBody>\r\n                        <InputGroup>\r\n                            <input type=\"text\" ref={this.inputRef} style={{width:\"75%\",height:\"40px\"}} value={`${this.props.path}`+`/`+`${this.props.id}`}></input>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                                <Button color=\"secondary\" onClick={this.handleclick}>Copy Link</Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </ModalBody>\r\n                </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default Share;"]},"metadata":{},"sourceType":"module"}