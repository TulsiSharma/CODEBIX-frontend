{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Row } from 'reactstrap';\nimport Leftcomponent from \"./Leftcomponent\";\nimport Footer from \"./Footer\";\nimport Rightcomponent from \"./Rightcomponent\";\nimport base from \"./base\";\nimport { firebaseApp } from \"./base\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editor: {},\n      isopen: false,\n      savefiles: {},\n      mode: \"none\",\n      dropdownvalue: \"\",\n      issaved: false,\n      filename: \"\",\n      status: \"\",\n      id: null,\n      recent: {\n        1234445433: {\n          name: \"HellowWorld\",\n          content: \"none\",\n          status: \"saved\",\n          mode: \"cpp\"\n        }\n      },\n      front: 0,\n      rear: -1\n    };\n\n    this.updaterecent = () => {\n      const len = Object.keys(this.state.recent).length;\n\n      if (len < 5) {\n        let id = null;\n        let data = {};\n        console.log(this); // let content=this.state.editor.getValue();\n        // let dropval=this.state.dropdownvalue;\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: content,\n            mode: dropval,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        const recent = { ...this.state.recent\n        };\n        recent[id] = data;\n        this.setState({\n          recent\n        });\n      } else {\n        const index = Object.keys(this.state.recent)[0];\n        const recent = { ...this.state.recent\n        };\n        delete recent[index];\n        const id = null;\n        const data = {};\n\n        if (!this.state.issaved) {\n          const file = {\n            name: \"Unknown\",\n            content: this.state.editor.getValue(),\n            mode: this.state.dropdownvalue,\n            status: \"Unsaved\"\n          };\n          id = Date.now();\n          data = file;\n        } else {\n          id = this.state.id;\n          data = this.state.savefiles[this.state.id];\n        }\n\n        recent[id] = data;\n        this.setState({\n          recent\n        });\n      }\n    };\n\n    this.setid = val => {\n      this.setState({\n        id: val\n      });\n    };\n\n    this.setdropdown = val => {\n      this.setState({\n        dropdownvalue: val\n      });\n    };\n\n    this.setsaved = () => {\n      this.setState({\n        issaved: !this.state.issaved\n      });\n    };\n\n    this.updateeditor = id => {\n      if (id && this.state.savefiles[id]) {\n        const data = this.state.savefiles[id];\n        this.setid(id);\n        this.setsaved();\n        this.setdropdown(data.mode);\n        this.state.editor.setValue(data.content);\n\n        switch (data.mode) {\n          case \"C++\":\n            this.state.editor.setOption(\"mode\", \"text/x-c++src\");\n            break;\n\n          case \"C\":\n            this.state.editor.setOption(\"mode\", \"text/x-csrc\");\n            break;\n        }\n\n        this.updaterecent();\n        this.state.editor.on('change', cm => {\n          if (this.state.dropdownvalue === data.mode) {\n            data.content = cm.getValue();\n            this.updatevalue(id, data);\n          }\n        });\n      }\n    };\n\n    this.updatevalue = (key, val) => {\n      const savefiles = { ...this.state.savefiles\n      };\n      savefiles[key] = val;\n      this.setState({\n        savefiles: savefiles\n      });\n    };\n\n    this.setmode = val => {\n      this.setState({\n        mode: val\n      });\n    };\n\n    this.savefile = val => {\n      this.setState({\n        issaved: true\n      });\n      this.setstatus(\"Saving...\");\n      const data = {\n        name: val,\n        content: this.state.editor.getValue(),\n        status: \"saved\",\n        mode: this.state.mode\n      };\n      const savefiles = { ...this.state.savefiles\n      };\n      const id = Date.now();\n      this.setid(id);\n      savefiles[id] = data;\n      this.setState({\n        savefiles: savefiles\n      });\n      setTimeout(() => {\n        this.setstatus(data.name);\n      }, 1000);\n      this.updaterecent();\n      this.state.editor.on('change', cm => {\n        if (this.state.dropdownvalue === data.mode) {\n          this.setstatus(\"Saving...\");\n          data.content = cm.getValue();\n          this.updatevalue(id, data);\n          setTimeout(() => {\n            this.setstatus(data.name);\n          }, 1000);\n        }\n      });\n    };\n\n    this.seteditor = val => {\n      this.setState({\n        editor: val\n      });\n    };\n\n    this.settheme = val => {\n      this.state.editor.setOption(\"theme\", val);\n    };\n\n    this.settab = val => {\n      this.state.editor.setOption(\"indentUnit\", val);\n    };\n\n    this.setsize = val => {\n      this.state.editor.getWrapperElement().style[\"font-size\"] = val + \"px\";\n      this.state.editor.refresh();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isopen: !this.state.isopen\n      });\n    };\n\n    this.setstatus = val => {\n      // console.log(val);\n      this.setState({\n        status: val\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"/tulsisharma/savefiles\", {\n      context: this,\n      state: 'savefiles'\n    });\n    const res = JSON.parse(localStorage.getItem(\"CodeBix\"));\n\n    if (res) {\n      this.setState({\n        recent: res.recent\n      });\n      this.setState({\n        front: res.front\n      });\n      this.setState({\n        rear: res.rear\n      });\n    }\n\n    const id = this.props.match.params.id;\n\n    if (id) {\n      setTimeout(() => {\n        this.updateeditor(id);\n      }, 3400);\n    }\n  }\n\n  componentWillUnmount() {\n    this.updaterecent();\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"CodeBix\", JSON.stringify(this.state.recent));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      settheme: this.settheme,\n      settab: this.settab,\n      setsize: this.setsize,\n      isopen: this.state.isopen,\n      savefile: this.savefile,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Leftcomponent, {\n      setsaved: this.setsaved,\n      editor: this.state.editor,\n      seteditor: this.seteditor,\n      toggle: this.toggle,\n      setmode: this.setmode,\n      setdropdown: this.setdropdown,\n      dropdownvalue: this.state.dropdownvalue,\n      issaved: this.state.issaved,\n      status: this.state.status,\n      setstatus: this.setstatus,\n      path: this.props.match.url,\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Rightcomponent, {\n      recent: this.state.recent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/App.js"],"names":["React","NavBar","Row","Leftcomponent","Footer","Rightcomponent","base","firebaseApp","App","Component","constructor","state","editor","isopen","savefiles","mode","dropdownvalue","issaved","filename","status","id","recent","name","content","front","rear","updaterecent","len","Object","keys","length","data","console","log","file","dropval","Date","now","setState","index","getValue","setid","val","setdropdown","setsaved","updateeditor","setValue","setOption","on","cm","updatevalue","key","setmode","savefile","setstatus","setTimeout","seteditor","settheme","settab","setsize","getWrapperElement","style","refresh","toggle","componentDidMount","ref","syncState","context","res","JSON","parse","localStorage","getItem","props","match","params","componentWillUnmount","removeBinding","componentDidUpdate","setItem","stringify","render","paddingLeft","paddingRight","marginLeft","marginRight","url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {Row} from 'reactstrap';\r\nimport Leftcomponent from \"./Leftcomponent\";\r\nimport Footer from \"./Footer\";\r\nimport Rightcomponent from \"./Rightcomponent\";\r\nimport base from \"./base\";\r\nimport {firebaseApp} from \"./base\";\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n    }\r\n    state={\r\n        editor:{},\r\n        isopen:false,\r\n        savefiles:{},\r\n        mode:\"none\",\r\n        dropdownvalue:\"\",\r\n        issaved:false,\r\n        filename:\"\",\r\n        status:\"\",\r\n        id:null,\r\n        recent:{\r\n            1234445433:{\r\n            name:\"HellowWorld\",\r\n            content:\"none\",\r\n            status:\"saved\",\r\n            mode:\"cpp\"\r\n            }\r\n        },\r\n        front:0,\r\n        rear:-1\r\n\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.ref= base.syncState(\"/tulsisharma/savefiles\",{\r\n            context:this,\r\n            state:'savefiles'\r\n        });\r\n        const res=JSON.parse(localStorage.getItem(\"CodeBix\"));\r\n        if(res){\r\n            this.setState({recent:res.recent});\r\n            this.setState({front:res.front});\r\n            this.setState({rear:res.rear});\r\n        }\r\n\r\n        const id = this.props.match.params.id;\r\n        if(id){\r\n            setTimeout(() => {\r\n                this.updateeditor(id);\r\n            },3400);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.updaterecent();\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\"CodeBix\",JSON.stringify(this.state.recent));\r\n    }\r\n\r\n    updaterecent=()=>{\r\n        const len = Object.keys(this.state.recent).length;\r\n        if(len<5){\r\n            let id =null;\r\n            let data={};\r\n            console.log(this);\r\n            // let content=this.state.editor.getValue();\r\n            // let dropval=this.state.dropdownvalue;\r\n            if(!this.state.issaved){\r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:content,\r\n                   mode:dropval,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            const recent={...this.state.recent};\r\n            recent[id]=data;\r\n            this.setState({recent});\r\n            \r\n        }\r\n        else{\r\n           const index= Object.keys(this.state.recent)[0];\r\n           const recent={...this.state.recent};\r\n           delete recent[index];\r\n           const id =null;\r\n            const data={};\r\n            if(!this.state.issaved){\r\n               const file={\r\n                   name:\"Unknown\",\r\n                   content:this.state.editor.getValue(),\r\n                   mode:this.state.dropdownvalue,\r\n                   status:\"Unsaved\"\r\n               }\r\n               id=Date.now();\r\n               data=file;\r\n            }\r\n            else{\r\n                id=this.state.id;\r\n               data=this.state.savefiles[this.state.id];\r\n            }\r\n            recent[id]=data;\r\n            this.setState({recent});\r\n        }\r\n    }\r\n\r\n    setid=(val)=>{\r\n        this.setState({id:val});\r\n    }\r\n    setdropdown=(val)=>{\r\n        this.setState({dropdownvalue:val});\r\n    }\r\n    setsaved=()=>{\r\n        this.setState({issaved:!this.state.issaved});\r\n    }\r\n\r\n    updateeditor=(id)=>{\r\n        if(id && this.state.savefiles[id]){\r\n            const data = this.state.savefiles[id];\r\n            this.setid(id);\r\n            this.setsaved();\r\n            this.setdropdown(data.mode);\r\n            this.state.editor.setValue(data.content);\r\n            switch (data.mode) {\r\n                case \"C++\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    break;\r\n                case \"C\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    break;\r\n            }\r\n            this.updaterecent();\r\n                \r\n            this.state.editor.on('change',(cm)=>{\r\n                if(this.state.dropdownvalue===data.mode){\r\n                    data.content=cm.getValue();\r\n                    this.updatevalue(id,data);\r\n                \r\n                }\r\n            });\r\n        \r\n        }\r\n    }\r\n\r\n    updatevalue=(key,val)=>{\r\n        const savefiles={...this.state.savefiles};\r\n        savefiles[key]=val;\r\n        this.setState({savefiles:savefiles});        \r\n    }\r\n\r\n    setmode=(val)=>{\r\n        this.setState({mode:val});\r\n    }\r\n    savefile=(val)=>{\r\n        this.setState({issaved:true});  \r\n        this.setstatus(\"Saving...\");\r\n        const data={\r\n            name:val,\r\n            content:this.state.editor.getValue(),\r\n            status:\"saved\",\r\n            mode:this.state.mode\r\n        }\r\n        const savefiles ={...this.state.savefiles};\r\n        const id =Date.now();\r\n        this.setid(id);\r\n        savefiles[id]=data;\r\n        this.setState({savefiles:savefiles});\r\n        setTimeout(() => {\r\n            this.setstatus(data.name);\r\n        }, 1000);\r\n        this.updaterecent();\r\n        this.state.editor.on('change',(cm)=>{\r\n            if(this.state.dropdownvalue===data.mode){\r\n                this.setstatus(\"Saving...\");\r\n                data.content=cm.getValue();\r\n                this.updatevalue(id,data);\r\n                setTimeout(() => {\r\n                    this.setstatus(data.name);\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    seteditor=(val)=>{\r\n        this.setState({editor:val});\r\n    }\r\n    settheme=(val)=>{\r\n        this.state.editor.setOption(\"theme\",val);\r\n    }\r\n    settab=(val)=>{\r\n        this.state.editor.setOption(\"indentUnit\",val);\r\n    }\r\n    setsize=(val)=>{\r\n        this.state.editor.getWrapperElement().style[\"font-size\"]= val+\"px\";\r\n        this.state.editor.refresh();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({isopen:!this.state.isopen});   \r\n    }\r\n    setstatus=(val)=>{\r\n        // console.log(val);\r\n        this.setState({status:val});\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\" style={{paddingLeft:\"0px\",paddingRight:\"0px\"}}>\r\n                <div className=\"main-wrapper\">\r\n                    <NavBar settheme={this.settheme} settab={this.settab} setsize={this.setsize} isopen={this.state.isopen} savefile={this.savefile} toggle={this.toggle}/>\r\n                    <div className=\"gap\"></div>\r\n                    <div className=\"\" style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                        <Row>\r\n                            <Leftcomponent setsaved={this.setsaved} editor={this.state.editor} seteditor={this.seteditor} toggle={this.toggle} setmode={this.setmode} setdropdown={this.setdropdown} dropdownvalue={this.state.dropdownvalue} issaved={this.state.issaved} status={this.state.status} setstatus={this.setstatus} path={this.props.match.url} id={this.state.id}/>\r\n                            <Rightcomponent recent={this.state.recent}/>\r\n                        </Row>\r\n                    </div>\r\n                    <br></br>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}