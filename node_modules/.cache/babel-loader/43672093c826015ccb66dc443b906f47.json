{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\Editor.js\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/addon/display/autorefresh.js\";\nimport \"codemirror/addon/display/placeholder.js\";\nimport \"codemirror/addon/edit/closebrackets.js\";\nimport \"codemirror/addon/edit/matchbrackets.js\";\nimport \"codemirror/addon/fold/brace-fold.js\";\nimport \"codemirror/addon/fold/foldcode.js\";\nimport \"codemirror/addon/fold/foldgutter.css\";\nimport \"codemirror/addon/fold/foldgutter.js\";\nimport \"codemirror/addon/fold/indent-fold.js\";\nimport \"codemirror/addon/hint/anyword-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\nimport \"codemirror/addon/selection/active-line.js\";\nimport \"codemirror/mode/clike/clike.js\";\nimport \"codemirror/theme/ayu-dark.css\";\nimport \"codemirror/theme/base16-light.css\";\nimport \"codemirror/theme/blackboard.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/mode/python/python.js\";\nimport \"codemirror/mode/ruby/ruby.js\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Button, ButtonDropdown, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from \"reactstrap\";\nimport { c, cpp, python2, python3, Java, NodeJS, Ruby, cpp14, csharp } from \"../data\";\n\nclass Editor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.InputRef = React.createRef();\n    this.secondRef = React.createRef();\n    this.exitRef = React.createRef();\n    this.state = {\n      dropdownOpen: false\n    };\n\n    this.createcodemirror = () => {\n      CodeMirror.commands.autocomplete = cm => {\n        cm.showHint({\n          hint: CodeMirror.hint.anyword\n        });\n      };\n\n      const editor = CodeMirror.fromTextArea(this.InputRef.current, {\n        lineNumbers: true,\n        autoFocus: true,\n        autoCloseBrackets: true,\n        matchBrackets: true,\n        styleActiveLine: true,\n        lineWrapping: true,\n        // undoDepth:10,\n        extraKeys: {\n          \"Ctrl-Q\": function (cm) {\n            cm.foldCode(cm.getCursor());\n          },\n          \"Ctrl-Space\": \"autocomplete\",\n          \"F11\": cm => {\n            this.fullscreen();\n          },\n          \"Esc\": cm => {\n            this.fullscreen();\n          }\n        },\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"error\"],\n        autoRefresh: true,\n        theme: \"blackboard\",\n        electricChars: true,\n        indentUnit: 4\n      });\n      editor.setSize(\"\", \"570\");\n      editor.getWrapperElement().style[\"font-size\"] = \"15px\";\n      editor.refresh();\n      editor.setValue(\"please select your language first..\");\n      this.props.seteditor(editor);\n      const example = CodeMirror.fromTextArea(this.InputRef.current);\n      example.setValue(\"222222222\");\n    };\n\n    this.toggle = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.updatevalue = event => {\n      if (this.props.oldvalue !== event.currentTarget.textContent) {\n        if (this.props.length > 0 && this.props.length < this.props.editor.getValue().length) {\n          // console.log(\"==>>  \"+this.props.editor.getValue());\n          this.props.updaterecent(this.props.editor.getValue());\n        }\n\n        switch (event.currentTarget.textContent) {\n          case \"C++\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"C++\");\n            this.props.editor.setOption(\"mode\", \"text/x-c++src\");\n            this.props.editor.setValue(cpp);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"C\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"C\");\n            this.props.editor.setOption(\"mode\", \"text/x-csrc\");\n            this.props.editor.setValue(c);\n            console.log(\"woooooooo\");\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"C++ 14\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"C++ 14\");\n            this.props.editor.setOption(\"mode\", \"text/x-c++src\");\n            this.props.editor.setValue(cpp14);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"Python 2\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            // this.props.updaterecent();\n            // }\n            this.props.setmode(\"Python 2\");\n            this.props.editor.setOption(\"mode\", \"text/x-python\");\n            this.props.editor.setOption(\"version\", 2);\n            this.props.editor.setValue(python2);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"Python 3\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"Python 3\");\n            this.props.editor.setOption(\"mode\", \"text/x-python\");\n            this.props.editor.setOption(\"version\", 3);\n            this.props.editor.setValue(python3);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"Java\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"Java\");\n            this.props.editor.setOption(\"mode\", \"text/x-java\");\n            this.props.editor.setValue(Java);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"C#\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"C#\");\n            this.props.editor.setOption(\"mode\", \"text/x-csharp\");\n            this.props.editor.setValue(csharp);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"NodeJS\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"NodeJS\");\n            this.props.editor.setOption(\"mode\", \"text/javascript\");\n            this.props.editor.setValue(NodeJS);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          case \"Ruby\":\n            // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\n            //     this.props.updaterecent();\n            // }\n            this.props.setmode(\"Ruby\");\n            this.props.editor.setOption(\"mode\", \"text/x-ruby\");\n            this.props.editor.setValue(Ruby);\n            this.props.setlength(this.props.editor.getValue().length);\n            this.props.setid(null);\n            break;\n\n          default:\n            break;\n        }\n\n        if (this.props.issaved) {\n          this.props.setsaved();\n        }\n\n        this.props.setoldvalue(event.currentTarget.textContent);\n        this.props.setdropdown(event.currentTarget.textContent);\n      }\n    };\n\n    this.handlesave = () => {\n      if (!this.props.uid && this.props.issaved) {\n        const name = this.props.status;\n        this.props.setstatus(\"login first !\");\n        setTimeout(() => {\n          this.props.setsignup();\n          this.props.setstatus(name);\n        }, 1500);\n      } else if (!this.props.uid) {\n        this.props.setsignup();\n      } else if (!this.props.issaved) {\n        this.props.toggle();\n      } else {\n        const name = this.props.status;\n        this.props.setstatus(\"Saving...\");\n        this.props.savefile(name);\n        setTimeout(() => {\n          this.props.setstatus(name);\n        }, 1000);\n      }\n    };\n\n    this.fullscreen = () => {\n      const ele = this.props.editor.getWrapperElement();\n      ele.requestFullscreen({\n        navigationUI: \"show\"\n      });\n    };\n\n    this.handleshare = () => {\n      if (!this.props.uid) {\n        this.props.setsignup();\n      } else if (!this.props.issaved) {\n        this.props.toggle();\n      } else {\n        this.props.setshare();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.createcodemirror();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor\",\n      ref: this.secondRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      style: {\n        marginLeft: \"5px\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      size: \"sm\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        color: \"black\",\n        border: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }, !this.props.dropdownvalue ? \"Language\" : this.props.dropdownvalue), /*#__PURE__*/React.createElement(DropdownMenu, {\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      active: true,\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      dropdownvalue: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 33\n      }\n    }, \"C++\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"C++ 14\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, \"Python 2\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }, \"Python 3\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, \"Java\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }, \"C#\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, \"NodeJS\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, \"Ruby\"))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      \"data-tip\": true,\n      \"data-for\": \"FullscreenMode\",\n      onClick: this.fullscreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-expand\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 105\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"FullscreenMode\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \"FullScreen\"), /*#__PURE__*/React.createElement(Button, {\n      \"data-tip\": true,\n      \"data-for\": \"Share\",\n      size: \"sm\",\n      onClick: this.handleshare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-share-alt\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 97\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"Share\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, this.props.dropdownvalue === \"\" ? \"Choose language first!\" : !this.props.issaved ? \"File saved before Share\" : \"Share\"), /*#__PURE__*/React.createElement(Button, {\n      \"data-tip\": true,\n      \"data-for\": \"save\",\n      size: \"sm\",\n      onClick: this.handlesave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-save\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 95\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"save\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, this.props.dropdownvalue === \"\" ? \"Choose language first!\" : \"Save\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\",\n        float: \"right\",\n        paddingTop: \"10px\",\n        fontSize: \"16px\",\n        fontWeight: \"300\",\n        paddingRight: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, !this.props.issaved ? \"Unsaved\" : this.props.status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"codemirror\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: this.InputRef,\n      autoCapitalize: \"false\",\n      tabIndex: \"4\",\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/Editor.js"],"names":["CodeMirror","React","ReactTooltip","Button","ButtonDropdown","Col","DropdownItem","DropdownMenu","DropdownToggle","Row","c","cpp","python2","python3","Java","NodeJS","Ruby","cpp14","csharp","Editor","Component","InputRef","createRef","secondRef","exitRef","state","dropdownOpen","createcodemirror","commands","autocomplete","cm","showHint","hint","anyword","editor","fromTextArea","current","lineNumbers","autoFocus","autoCloseBrackets","matchBrackets","styleActiveLine","lineWrapping","extraKeys","foldCode","getCursor","fullscreen","foldGutter","gutters","autoRefresh","theme","electricChars","indentUnit","setSize","getWrapperElement","style","refresh","setValue","props","seteditor","example","toggle","setState","updatevalue","event","oldvalue","currentTarget","textContent","length","getValue","updaterecent","setmode","setOption","setlength","setid","console","log","issaved","setsaved","setoldvalue","setdropdown","handlesave","uid","name","status","setstatus","setTimeout","setsignup","savefile","ele","requestFullscreen","navigationUI","handleshare","setshare","componentDidMount","render","marginLeft","height","backgroundColor","color","border","dropdownvalue","width","marginRight","fontSize","float","paddingTop","fontWeight","paddingRight","position"],"mappings":"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","sourcesContent":["import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/display/autorefresh.js\";\r\nimport \"codemirror/addon/display/placeholder.js\";\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/fold/brace-fold.js\";\r\nimport \"codemirror/addon/fold/foldcode.js\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/addon/fold/foldgutter.js\";\r\nimport \"codemirror/addon/fold/indent-fold.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\r\nimport \"codemirror/addon/selection/active-line.js\";\r\nimport \"codemirror/mode/clike/clike.js\";\r\nimport \"codemirror/theme/ayu-dark.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/theme/monokai.css\";\r\nimport \"codemirror/mode/python/python.js\";\r\nimport \"codemirror/mode/ruby/ruby.js\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Button, ButtonDropdown, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from \"reactstrap\";\r\nimport { c, cpp ,python2,python3,Java,NodeJS,Ruby,cpp14,csharp} from \"../data\";\r\nclass Editor extends React.Component {\r\n    InputRef=React.createRef();\r\n    secondRef=React.createRef();\r\n    exitRef=React.createRef();\r\n    state={\r\n        dropdownOpen:false\r\n    }\r\n    createcodemirror=()=>{\r\n        CodeMirror.commands.autocomplete=(cm)=>{\r\n            cm.showHint({hint:CodeMirror.hint.anyword});\r\n        }\r\n        const editor = CodeMirror.fromTextArea(this.InputRef.current,{\r\n            lineNumbers: true,\r\n            autoFocus:true,\r\n            autoCloseBrackets: true,\r\n            matchBrackets:true,\r\n            styleActiveLine:true,\r\n            lineWrapping:true,\r\n            // undoDepth:10,\r\n            extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); },\r\n                \"Ctrl-Space\":\"autocomplete\",\r\n                \"F11\":(cm)=>{\r\n                    this.fullscreen();\r\n                },\r\n                \"Esc\":(cm)=>{\r\n                    this.fullscreen();\r\n                }\r\n            },  \r\n            foldGutter:true,\r\n            gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\",\"error\"],\r\n            autoRefresh:true,\r\n            theme:\"blackboard\",\r\n            electricChars:true,\r\n            indentUnit:4,\r\n            \r\n        });\r\n        editor.setSize(\"\",\"570\");\r\n        editor.getWrapperElement().style[\"font-size\"]=\"15px\";\r\n        editor.refresh();\r\n        editor.setValue(\"please select your language first..\");\r\n        this.props.seteditor(editor);\r\n        const example= CodeMirror.fromTextArea(this.InputRef.current);\r\n        example.setValue(\"222222222\");  \r\n    }\r\n    componentDidMount(){\r\n       this.createcodemirror();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({dropdownOpen:!this.state.dropdownOpen});\r\n    }\r\n    updatevalue=(event)=>{\r\n        if(this.props.oldvalue !== event.currentTarget.textContent){\r\n            if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                        // console.log(\"==>>  \"+this.props.editor.getValue());\r\n                        this.props.updaterecent(this.props.editor.getValue());\r\n            }\r\n            switch (event.currentTarget.textContent) {      \r\n                case \"C++\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"C++\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    this.props.editor.setValue(cpp);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"C\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"C\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    this.props.editor.setValue(c);\r\n                    console.log(\"woooooooo\");\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"C++ 14\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"C++ 14\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    this.props.editor.setValue(cpp14);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"Python 2\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                        // this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"Python 2\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-python\");\r\n                    this.props.editor.setOption(\"version\",2);\r\n                    this.props.editor.setValue(python2);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"Python 3\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"Python 3\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-python\");\r\n                    this.props.editor.setOption(\"version\",3);\r\n                    this.props.editor.setValue(python3);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"Java\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"Java\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-java\");\r\n                    this.props.editor.setValue(Java);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"C#\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"C#\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-csharp\");\r\n                    this.props.editor.setValue(csharp);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"NodeJS\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"NodeJS\");\r\n                    this.props.editor.setOption(\"mode\",\"text/javascript\");\r\n                    this.props.editor.setValue(NodeJS);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n                case \"Ruby\":\r\n                    // if(this.props.length > 0 && this.props.length < this.props.editor.getValue().length){\r\n                    //     this.props.updaterecent();\r\n                    // }\r\n                    this.props.setmode(\"Ruby\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-ruby\");\r\n                    this.props.editor.setValue(Ruby);\r\n                    this.props.setlength(this.props.editor.getValue().length);\r\n                    this.props.setid(null);\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            if(this.props.issaved){\r\n                this.props.setsaved();\r\n            }\r\n            this.props.setoldvalue(event.currentTarget.textContent);\r\n\r\n            this.props.setdropdown(event.currentTarget.textContent);\r\n        }\r\n    }\r\n    handlesave=()=>{\r\n        if(!this.props.uid && this.props.issaved){\r\n            const name=this.props.status;\r\n            this.props.setstatus(\"login first !\");\r\n            setTimeout(() => {\r\n                this.props.setsignup();\r\n                this.props.setstatus(name);\r\n            }, 1500);\r\n\r\n        }\r\n        else if(!this.props.uid){\r\n            this.props.setsignup();\r\n        }\r\n        else if(!this.props.issaved){\r\n            this.props.toggle();\r\n        }\r\n        else{\r\n            const name=this.props.status;\r\n            this.props.setstatus(\"Saving...\");\r\n            this.props.savefile(name);\r\n            setTimeout(() => {\r\n                this.props.setstatus(name);\r\n            }, 1000);\r\n        }\r\n    }\r\n    fullscreen=()=>{\r\n        const ele= this.props.editor.getWrapperElement();\r\n        ele.requestFullscreen({ navigationUI: \"show\" });\r\n        \r\n    }\r\n    \r\n    handleshare=()=>{\r\n        if(!this.props.uid){\r\n            this.props.setsignup();\r\n        }\r\n        else if(!this.props.issaved){\r\n            this.props.toggle();\r\n\r\n        }\r\n        else{\r\n            this.props.setshare();\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"editor\" ref={this.secondRef}>\r\n                        <div className=\"editor-nav\">\r\n                        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{marginLeft:\"5px\",height:\"100%\"}}>\r\n                            <DropdownToggle caret size=\"sm\"style={{backgroundColor:\"whitesmoke\",color:\"black\",border:\"block\"}}>\r\n                                {!this.props.dropdownvalue?\"Language\":this.props.dropdownvalue}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu style={{width:\"200px\"}}>\r\n                                <DropdownItem active style={{marginRight:\"0px\"}} onClick={this.updatevalue} dropdownvalue=\"click\">C++</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>C</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>C++ 14</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>Python 2</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>Python 3</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>Java</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>C#</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>NodeJS</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>Ruby</DropdownItem>\r\n                            </DropdownMenu> \r\n                        </ButtonDropdown>\r\n                        <Button  size=\"sm\" data-tip data-for=\"FullscreenMode\" onClick={this.fullscreen}><i className=\"fas fa-expand\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"FullscreenMode\" place=\"top\" effect=\"solid\">\r\n                            FullScreen\r\n                        </ReactTooltip>\r\n                        <Button  data-tip data-for=\"Share\" size=\"sm\" onClick={this.handleshare}><i className=\"fas fa-share-alt\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"Share\" place=\"top\" effect=\"solid\">\r\n                            {this.props.dropdownvalue===\"\"?\"Choose language first!\":!this.props.issaved? \"File saved before Share\" : \"Share\"}\r\n                        </ReactTooltip>\r\n                        <Button data-tip data-for=\"save\" size=\"sm\" onClick={this.handlesave} ><i className=\"fas fa-save\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"save\" place=\"top\" effect=\"solid\">\r\n                        {this.props.dropdownvalue===\"\"?\"Choose language first!\":\"Save\"}\r\n                        </ReactTooltip>    \r\n                        <span style={{color:\"blue\", float:\"right\",paddingTop:\"10px\",fontSize:\"16px\",fontWeight:\"300\",paddingRight:\"17px\"}}>{!this.props.issaved ? \"Unsaved\": this.props.status}</span>\r\n                        </div>\r\n                        <div className=\"codemirror\">\r\n                            <textarea ref={this.InputRef} autoCapitalize=\"false\" tabIndex=\"4\" style={{position:\"relative\"}}>\r\n                            </textarea>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}