{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n  var GUTT_CLASS = \"CodeMirror-activeline-gutter\";\n  CodeMirror.defineOption(\"styleActiveLine\", false, function (cm, val, old) {\n    var prev = old == CodeMirror.Init ? false : old;\n    if (val == prev) return;\n\n    if (prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n\n    if (val) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"gutter\", GUTT_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] != b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var option = cm.getOption(\"styleActiveLine\");\n      if (typeof option == \"object\" && option.nonEmpty ? range.anchor.line != range.head.line : !range.empty()) continue;\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function () {\n      clearActiveLines(cm);\n\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n        cm.addLineClass(active[i], \"gutter\", GUTT_CLASS);\n      }\n\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});","map":{"version":3,"sources":["E:/Internship Project/codebix/node_modules/codemirror/addon/selection/active-line.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WRAP_CLASS","BACK_CLASS","GUTT_CLASS","defineOption","cm","val","old","prev","Init","off","selectionChange","clearActiveLines","state","activeLines","updateActiveLines","listSelections","on","i","length","removeLineClass","sameArray","a","b","ranges","active","range","option","getOption","nonEmpty","anchor","line","head","empty","getLineHandleVisualStart","push","operation","addLineClass","sel"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n  var GUTT_CLASS = \"CodeMirror-activeline-gutter\";\n\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\n    var prev = old == CodeMirror.Init ? false : old;\n    if (val == prev) return\n    if (prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n    if (val) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"gutter\", GUTT_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n    for (var i = 0; i < a.length; i++)\n      if (a[i] != b[i]) return false;\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var option = cm.getOption(\"styleActiveLine\");\n      if (typeof option == \"object\" && option.nonEmpty ? range.anchor.line != range.head.line : !range.empty())\n        continue\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function() {\n      clearActiveLines(cm);\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n        cm.addLineClass(active[i], \"gutter\", GUTT_CLASS);\n      }\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}