{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Row } from 'reactstrap';\nimport Leftcomponent from \"./Leftcomponent\";\nimport Footer from \"./Footer\";\nimport Rightcomponent from \"./Rightcomponent\";\nimport base from \"./base\";\nimport { firebaseApp } from \"./base\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editor: {},\n      isopen: false,\n      savefiles: {},\n      mode: \"none\",\n      dropdownvalue: \"\",\n      issaved: false,\n      filename: \"\",\n      status: \"\",\n      id: null,\n      recent: {\n        1234445433: {\n          name: \"HellowWorld\",\n          content: \"none\",\n          status: \"saved\",\n          mode: \"cpp\"\n        }\n      }\n    };\n\n    this.updaterecent = () => {\n      const len = Object.keys(this.state.recent).length; // let content=this.state.editor.getValue();\n      // let dropval=this.state.dropdownvalue;\n\n      if (len < 5) {\n        console.log(this); // let id =null;\n        // let data={};\n        // if(!this.state.issaved){\n        //    const file={\n        //        name:\"Unknown\",\n        //        content:content,\n        //        mode:dropval,\n        //        status:\"Unsaved\"\n        //    }\n        //    id=Date.now();\n        //    data=file;\n        // }\n        // else{\n        //     id=this.state.id;\n        //    data=this.state.savefiles[this.state.id];\n        // }\n        // const recent={...this.state.recent};\n        // recent[id]=data;\n        // this.setState({recent});\n      } else {//    const index= Object.keys(this.state.recent)[0];\n          //    const recent={...this.state.recent};\n          //    delete recent[index];\n          //    const id =null;\n          //     const data={};\n          //     if(!this.state.issaved){\n          //        const file={\n          //            name:\"Unknown\",\n          //            content:this.state.editor.getValue(),\n          //            mode:this.state.dropdownvalue,\n          //            status:\"Unsaved\"\n          //        }\n          //        id=Date.now();\n          //        data=file;\n          //     }\n          //     else{\n          //         id=this.state.id;\n          //        data=this.state.savefiles[this.state.id];\n          //     }\n          //     recent[id]=data;\n          //     this.setState({recent});\n        }\n    };\n\n    this.setid = val => {\n      this.setState({\n        id: val\n      });\n    };\n\n    this.setdropdown = val => {\n      this.setState({\n        dropdownvalue: val\n      });\n    };\n\n    this.setsaved = () => {\n      this.setState({\n        issaved: !this.state.issaved\n      });\n    };\n\n    this.updateeditor = id => {\n      if (id && this.state.savefiles[id]) {\n        const data = this.state.savefiles[id];\n        this.setid(id);\n        this.setsaved();\n        this.setdropdown(data.mode);\n        this.state.editor.setValue(data.content);\n\n        switch (data.mode) {\n          case \"C++\":\n            this.state.editor.setOption(\"mode\", \"text/x-c++src\");\n            break;\n\n          case \"C\":\n            this.state.editor.setOption(\"mode\", \"text/x-csrc\");\n            break;\n        }\n\n        this.updaterecent();\n        this.state.editor.on('change', cm => {\n          if (this.state.dropdownvalue === data.mode) {\n            data.content = cm.getValue();\n            this.updatevalue(id, data);\n          }\n        });\n      }\n    };\n\n    this.updatevalue = (key, val) => {\n      const savefiles = { ...this.state.savefiles\n      };\n      savefiles[key] = val;\n      this.setState({\n        savefiles: savefiles\n      });\n    };\n\n    this.setmode = val => {\n      this.setState({\n        mode: val\n      });\n    };\n\n    this.savefile = val => {\n      this.setState({\n        issaved: true\n      });\n      this.setstatus(\"Saving...\");\n      const data = {\n        name: val,\n        content: this.state.editor.getValue(),\n        status: \"saved\",\n        mode: this.state.mode\n      };\n      const savefiles = { ...this.state.savefiles\n      };\n      const id = Date.now();\n      this.setid(id);\n      savefiles[id] = data;\n      this.setState({\n        savefiles: savefiles\n      });\n      setTimeout(() => {\n        this.setstatus(data.name);\n      }, 1000);\n      this.updaterecent();\n      this.state.editor.on('change', cm => {\n        if (this.state.dropdownvalue === data.mode) {\n          this.setstatus(\"Saving...\");\n          data.content = cm.getValue();\n          this.updatevalue(id, data);\n          setTimeout(() => {\n            this.setstatus(data.name);\n          }, 1000);\n        }\n      });\n    };\n\n    this.seteditor = val => {\n      this.setState({\n        editor: val\n      });\n    };\n\n    this.settheme = val => {\n      this.state.editor.setOption(\"theme\", val);\n    };\n\n    this.settab = val => {\n      this.state.editor.setOption(\"indentUnit\", val);\n    };\n\n    this.setsize = val => {\n      this.state.editor.getWrapperElement().style[\"font-size\"] = val + \"px\";\n      this.state.editor.refresh();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isopen: !this.state.isopen\n      });\n    };\n\n    this.setstatus = val => {\n      // console.log(val);\n      this.setState({\n        status: val\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"/tulsisharma/savefiles\", {\n      context: this,\n      state: 'savefiles'\n    });\n    const res = localStorage.getItem(\"CodeBix\");\n\n    if (res) {\n      this.setState({\n        recent: res.recent\n      });\n    }\n\n    const id = this.props.match.params.id;\n\n    if (id) {\n      setTimeout(() => {\n        this.updateeditor(id);\n      }, 3400);\n    }\n  }\n\n  componentWillUnmount() {\n    // this.updaterecent();\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const finalval = {\n      recent: this.state.recent\n    };\n    localStorage.setItem(\"CodeBix\", JSON.stringify(finalval));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      settheme: this.settheme,\n      settab: this.settab,\n      setsize: this.setsize,\n      isopen: this.state.isopen,\n      savefile: this.savefile,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Leftcomponent, {\n      setsaved: this.setsaved,\n      editor: this.state.editor,\n      seteditor: this.seteditor,\n      toggle: this.toggle,\n      setmode: this.setmode,\n      setdropdown: this.setdropdown,\n      dropdownvalue: this.state.dropdownvalue,\n      issaved: this.state.issaved,\n      status: this.state.status,\n      setstatus: this.setstatus,\n      path: this.props.match.url,\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Rightcomponent, {\n      recent: this.state.recent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/App.js"],"names":["React","NavBar","Row","Leftcomponent","Footer","Rightcomponent","base","firebaseApp","App","Component","constructor","state","editor","isopen","savefiles","mode","dropdownvalue","issaved","filename","status","id","recent","name","content","updaterecent","len","Object","keys","length","console","log","setid","val","setState","setdropdown","setsaved","updateeditor","data","setValue","setOption","on","cm","getValue","updatevalue","key","setmode","savefile","setstatus","Date","now","setTimeout","seteditor","settheme","settab","setsize","getWrapperElement","style","refresh","toggle","componentDidMount","ref","syncState","context","res","localStorage","getItem","props","match","params","componentWillUnmount","removeBinding","componentDidUpdate","finalval","setItem","JSON","stringify","render","paddingLeft","paddingRight","marginLeft","marginRight","url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {Row} from 'reactstrap';\r\nimport Leftcomponent from \"./Leftcomponent\";\r\nimport Footer from \"./Footer\";\r\nimport Rightcomponent from \"./Rightcomponent\";\r\nimport base from \"./base\";\r\nimport {firebaseApp} from \"./base\";\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n    }\r\n    state={\r\n        editor:{},\r\n        isopen:false,\r\n        savefiles:{},\r\n        mode:\"none\",\r\n        dropdownvalue:\"\",\r\n        issaved:false,\r\n        filename:\"\",\r\n        status:\"\",\r\n        id:null,\r\n        recent:{\r\n            1234445433:{\r\n            name:\"HellowWorld\",\r\n            content:\"none\",\r\n            status:\"saved\",\r\n            mode:\"cpp\"\r\n            }\r\n        },\r\n\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.ref= base.syncState(\"/tulsisharma/savefiles\",{\r\n            context:this,\r\n            state:'savefiles'\r\n        });\r\n        const res=localStorage.getItem(\"CodeBix\");\r\n        if(res){\r\n            this.setState({recent:res.recent});\r\n        }\r\n\r\n        const id = this.props.match.params.id;\r\n        if(id){\r\n            setTimeout(() => {\r\n                this.updateeditor(id);\r\n            },3400);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // this.updaterecent();\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n       const finalval={\r\n            recent:this.state.recent\r\n        }\r\n        localStorage.setItem(\"CodeBix\",JSON.stringify(finalval));\r\n    }\r\n\r\n    updaterecent=()=>{\r\n        const len = Object.keys(this.state.recent).length;\r\n        // let content=this.state.editor.getValue();\r\n        // let dropval=this.state.dropdownvalue;\r\n        if(len<5){\r\n            console.log(this);\r\n            // let id =null;\r\n            // let data={};\r\n            // if(!this.state.issaved){\r\n            //    const file={\r\n            //        name:\"Unknown\",\r\n            //        content:content,\r\n            //        mode:dropval,\r\n            //        status:\"Unsaved\"\r\n            //    }\r\n            //    id=Date.now();\r\n            //    data=file;\r\n            // }\r\n            // else{\r\n            //     id=this.state.id;\r\n            //    data=this.state.savefiles[this.state.id];\r\n            // }\r\n            // const recent={...this.state.recent};\r\n            // recent[id]=data;\r\n            // this.setState({recent});\r\n            \r\n        }\r\n        else{\r\n        //    const index= Object.keys(this.state.recent)[0];\r\n        //    const recent={...this.state.recent};\r\n        //    delete recent[index];\r\n        //    const id =null;\r\n        //     const data={};\r\n        //     if(!this.state.issaved){\r\n        //        const file={\r\n        //            name:\"Unknown\",\r\n        //            content:this.state.editor.getValue(),\r\n        //            mode:this.state.dropdownvalue,\r\n        //            status:\"Unsaved\"\r\n        //        }\r\n        //        id=Date.now();\r\n        //        data=file;\r\n        //     }\r\n        //     else{\r\n        //         id=this.state.id;\r\n        //        data=this.state.savefiles[this.state.id];\r\n        //     }\r\n        //     recent[id]=data;\r\n        //     this.setState({recent});\r\n        }\r\n    }\r\n\r\n    setid=(val)=>{\r\n        this.setState({id:val});\r\n    }\r\n    setdropdown=(val)=>{\r\n        this.setState({dropdownvalue:val});\r\n    }\r\n    setsaved=()=>{\r\n        this.setState({issaved:!this.state.issaved});\r\n    }\r\n\r\n    updateeditor=(id)=>{\r\n        if(id && this.state.savefiles[id]){\r\n            const data = this.state.savefiles[id];\r\n            this.setid(id);\r\n            this.setsaved();\r\n            this.setdropdown(data.mode);\r\n            this.state.editor.setValue(data.content);\r\n            switch (data.mode) {\r\n                case \"C++\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    break;\r\n                case \"C\":\r\n                    this.state.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    break;\r\n            }\r\n            this.updaterecent();\r\n                \r\n            this.state.editor.on('change',(cm)=>{\r\n                if(this.state.dropdownvalue===data.mode){\r\n                    data.content=cm.getValue();\r\n                    this.updatevalue(id,data);\r\n                \r\n                }\r\n            });\r\n        \r\n        }\r\n    }\r\n\r\n    updatevalue=(key,val)=>{\r\n        const savefiles={...this.state.savefiles};\r\n        savefiles[key]=val;\r\n        this.setState({savefiles:savefiles});        \r\n    }\r\n\r\n    setmode=(val)=>{\r\n        this.setState({mode:val});\r\n    }\r\n    savefile=(val)=>{\r\n        this.setState({issaved:true});  \r\n        this.setstatus(\"Saving...\");\r\n        const data={\r\n            name:val,\r\n            content:this.state.editor.getValue(),\r\n            status:\"saved\",\r\n            mode:this.state.mode\r\n        }\r\n        const savefiles ={...this.state.savefiles};\r\n        const id =Date.now();\r\n        this.setid(id);\r\n        savefiles[id]=data;\r\n        this.setState({savefiles:savefiles});\r\n        setTimeout(() => {\r\n            this.setstatus(data.name);\r\n        }, 1000);\r\n        this.updaterecent();\r\n        this.state.editor.on('change',(cm)=>{\r\n            if(this.state.dropdownvalue===data.mode){\r\n                this.setstatus(\"Saving...\");\r\n                data.content=cm.getValue();\r\n                this.updatevalue(id,data);\r\n                setTimeout(() => {\r\n                    this.setstatus(data.name);\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    seteditor=(val)=>{\r\n        this.setState({editor:val});\r\n    }\r\n    settheme=(val)=>{\r\n        this.state.editor.setOption(\"theme\",val);\r\n    }\r\n    settab=(val)=>{\r\n        this.state.editor.setOption(\"indentUnit\",val);\r\n    }\r\n    setsize=(val)=>{\r\n        this.state.editor.getWrapperElement().style[\"font-size\"]= val+\"px\";\r\n        this.state.editor.refresh();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({isopen:!this.state.isopen});   \r\n    }\r\n    setstatus=(val)=>{\r\n        // console.log(val);\r\n        this.setState({status:val});\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\" style={{paddingLeft:\"0px\",paddingRight:\"0px\"}}>\r\n                <div className=\"main-wrapper\">\r\n                    <NavBar settheme={this.settheme} settab={this.settab} setsize={this.setsize} isopen={this.state.isopen} savefile={this.savefile} toggle={this.toggle}/>\r\n                    <div className=\"gap\"></div>\r\n                    <div className=\"\" style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                        <Row>\r\n                            <Leftcomponent setsaved={this.setsaved} editor={this.state.editor} seteditor={this.seteditor} toggle={this.toggle} setmode={this.setmode} setdropdown={this.setdropdown} dropdownvalue={this.state.dropdownvalue} issaved={this.state.issaved} status={this.state.status} setstatus={this.setstatus} path={this.props.match.url} id={this.state.id}/>\r\n                            <Rightcomponent recent={this.state.recent}/>\r\n                        </Row>\r\n                    </div>\r\n                    <br></br>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}