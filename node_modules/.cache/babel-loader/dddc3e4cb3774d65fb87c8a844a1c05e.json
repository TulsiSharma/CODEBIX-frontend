{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\Filecontainer.js\";\nimport React from \"react\";\nimport { Row, Container } from \"reactstrap\";\nimport Savecards from \"./Savecards\";\nimport { Spinner } from 'reactstrap';\n\nclass Filecontainer extends React.Component {\n  render() {\n    if (!this.props.result) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        style: {\n          width: '3rem',\n          height: '3rem'\n        },\n        type: \"grow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      });\n    }\n\n    if (!Object.keys(this.props.result).length) {\n      console.log(this.props.result);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"emptymsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, \"No Such Files.\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, Object.keys(this.props.result).map(key => /*#__PURE__*/React.createElement(Savecards, {\n      key: key,\n      ind: key,\n      result: this.props.result,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }\n    })));\n  }\n\n}\n\nexport default Filecontainer;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/Filecontainer.js"],"names":["React","Row","Container","Savecards","Spinner","Filecontainer","Component","render","props","result","width","height","Object","keys","length","console","log","map","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAaC,SAAb,QAA8B,YAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA2C;AACvCC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKC,KAAL,CAAWC,MAAf,EAAsB;AAClB,0BACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAhB;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AACD,QAAG,CAACC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWC,MAAvB,EAA+BK,MAAnC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,MAAvB;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ;AAKH;;AACD,wBACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWC,MAAvB,EAA+BQ,GAA/B,CAAmCC,GAAG,iBACnC,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,GAAG,EAAEA,GAA1B;AAA+B,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADJ,CADR;AAOH;;AAtBsC;;AAwB3C,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Row,Container } from \"reactstrap\";\r\nimport Savecards from \"./Savecards\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nclass Filecontainer extends React.Component{\r\n    render(){\r\n        if(!this.props.result){\r\n            return(\r\n                <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n            );\r\n        }\r\n        if(!Object.keys(this.props.result).length){\r\n            console.log(this.props.result);\r\n            return(\r\n                <div className=\"emptymsg\">\r\n                    <h3>No Such Files.</h3>\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n                <Row>\r\n                   {Object.keys(this.props.result).map(key=>(\r\n                       <Savecards key={key} ind={key} result={this.props.result}/>\r\n                   ))}\r\n                </Row>\r\n        );\r\n    }\r\n}\r\nexport default Filecontainer;"]},"metadata":{},"sourceType":"module"}