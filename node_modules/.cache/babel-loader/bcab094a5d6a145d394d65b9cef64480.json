{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\Editor.js\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/addon/display/autorefresh.js\";\nimport \"codemirror/addon/display/placeholder.js\";\nimport \"codemirror/addon/edit/closebrackets.js\";\nimport \"codemirror/addon/edit/matchbrackets.js\";\nimport \"codemirror/addon/fold/brace-fold.js\";\nimport \"codemirror/addon/fold/foldcode.js\";\nimport \"codemirror/addon/fold/foldgutter.css\";\nimport \"codemirror/addon/fold/foldgutter.js\";\nimport \"codemirror/addon/fold/indent-fold.js\";\nimport \"codemirror/addon/hint/anyword-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\nimport \"codemirror/addon/selection/active-line.js\";\nimport \"codemirror/mode/clike/clike.js\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/theme/ayu-dark.css\";\nimport \"codemirror/theme/base16-light.css\";\nimport \"codemirror/theme/blackboard.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/addon/display/fullscreen.css\";\nimport \"codemirror/addon/display/fullscreen.js\";\nimport React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Button, ButtonDropdown, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from \"reactstrap\";\nimport { c, cpp } from \"../data\";\n\nclass Editor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.InputRef = React.createRef();\n    this.secondRef = React.createRef();\n    this.exitRef = React.createRef();\n    this.state = {\n      dropdownOpen: false,\n      oldvalue: null\n    };\n\n    this.createcodemirror = () => {\n      CodeMirror.commands.autocomplete = cm => {\n        cm.showHint({\n          hint: CodeMirror.hint.anyword\n        });\n      };\n\n      const editor = CodeMirror.fromTextArea(this.InputRef.current, {\n        lineNumbers: true,\n        autoFocus: true,\n        autoCloseBrackets: true,\n        matchBrackets: true,\n        styleActiveLine: true,\n        lineWrapping: true,\n        undoDepth: 300,\n        extraKeys: {\n          \"Ctrl-Q\": function (cm) {\n            cm.foldCode(cm.getCursor());\n          },\n          \"Ctrl-Space\": \"autocomplete\",\n          \"F11\": function (cm) {\n            cm.setOption(\"fullScreen\", true);\n          },\n          \"Esc\": function (cm) {\n            cm.setOption(\"fullScreen\", false);\n          }\n        },\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"error\"],\n        autoRefresh: true,\n        theme: \"blackboard\",\n        electricChars: true,\n        indentUnit: 4\n      });\n      editor.setSize(\"\", \"570\");\n      editor.getWrapperElement().style[\"font-size\"] = \"15px\";\n      editor.refresh();\n      editor.setValue(\"please select your language first..\");\n      this.props.seteditor(editor);\n      editor.on('change', function () {});\n    };\n\n    this.toggle = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.updatevalue = event => {\n      if (this.state.oldvalue !== event.currentTarget.textContent) {\n        switch (event.currentTarget.textContent) {\n          case \"C++\":\n            this.props.setmode(\"C++\");\n            this.props.editor.setOption(\"mode\", \"text/x-c++src\");\n            this.props.editor.setValue(cpp);\n            break;\n\n          case \"C\":\n            this.props.setmode(\"C\");\n            this.props.editor.setOption(\"mode\", \"text/x-csrc\");\n            this.props.editor.setValue(c);\n            break;\n\n          default:\n            break;\n        }\n\n        if (this.props.issaved) {\n          this.props.setsaved();\n        }\n\n        this.setState({\n          oldvalue: event.currentTarget.textContent\n        });\n        this.props.setdropdown(event.currentTarget.textContent);\n      }\n    };\n\n    this.handlesave = () => {\n      if (!this.props.issaved) {\n        this.props.toggle();\n      } else {\n        const name = this.props.status;\n        console.log(name);\n        this.props.setstatus(\"Saving...\");\n        setTimeout(() => {\n          this.props.setstatus(name);\n        }, 1000);\n      }\n    };\n\n    this.fullscreen = () => {\n      const ele = this.props.editor.getWrapperElement();\n      ele.requestFullscreen({\n        navigationUI: \"show\"\n      }).then(() => {});\n    };\n\n    this.handleshare = () => {\n      if (!this.props.issaved) {\n        this.props.toggle();\n      } else {\n        this.props.setshare();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.createcodemirror();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor\",\n      ref: this.secondRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      style: {\n        marginLeft: \"5px\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      size: \"sm\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        color: \"black\",\n        border: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, !this.props.dropdownvalue ? \"Language\" : this.props.dropdownvalue), /*#__PURE__*/React.createElement(DropdownMenu, {\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      active: true,\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      dropdownvalue: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, \"C++\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, \"C\"))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      \"data-tip\": true,\n      \"data-for\": \"FullscreenMode\",\n      onClick: this.fullscreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-expand\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 105\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"FullscreenMode\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"FullScreen\"), /*#__PURE__*/React.createElement(Button, {\n      \"data-tip\": true,\n      \"data-for\": \"Share\",\n      size: \"sm\",\n      onClick: this.handleshare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-share-alt\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 97\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"Share\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, this.props.dropdownvalue === \"\" ? \"Choose language first!\" : !this.props.issaved ? \"File saved before Share\" : \"Share\"), /*#__PURE__*/React.createElement(Button, {\n      \"data-tip\": true,\n      \"data-for\": \"save\",\n      size: \"sm\",\n      onClick: this.handlesave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-save\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 95\n      }\n    })), /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"save\",\n      place: \"top\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, this.props.dropdownvalue === \"\" ? \"Choose language first!\" : \"Save\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\",\n        float: \"right\",\n        paddingTop: \"10px\",\n        fontSize: \"16px\",\n        fontWeight: \"300\",\n        paddingRight: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, !this.props.issaved ? \"Unsaved\" : this.props.status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"codemirror\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: this.InputRef,\n      autoCapitalize: \"false\",\n      tabIndex: \"4\",\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn hideit\",\n      ref: this.exitRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"exitfullscreen\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compress\",\n      style: {\n        fontSize: \"26px\",\n        fontStyle: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 74\n      }\n    }))))));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/Editor.js"],"names":["CodeMirror","React","ReactTooltip","Button","ButtonDropdown","Col","DropdownItem","DropdownMenu","DropdownToggle","Row","c","cpp","Editor","Component","InputRef","createRef","secondRef","exitRef","state","dropdownOpen","oldvalue","createcodemirror","commands","autocomplete","cm","showHint","hint","anyword","editor","fromTextArea","current","lineNumbers","autoFocus","autoCloseBrackets","matchBrackets","styleActiveLine","lineWrapping","undoDepth","extraKeys","foldCode","getCursor","setOption","foldGutter","gutters","autoRefresh","theme","electricChars","indentUnit","setSize","getWrapperElement","style","refresh","setValue","props","seteditor","on","toggle","setState","updatevalue","event","currentTarget","textContent","setmode","issaved","setsaved","setdropdown","handlesave","name","status","console","log","setstatus","setTimeout","fullscreen","ele","requestFullscreen","navigationUI","then","handleshare","setshare","componentDidMount","render","marginLeft","height","backgroundColor","color","border","dropdownvalue","width","marginRight","fontSize","float","paddingTop","fontWeight","paddingRight","position","fontStyle"],"mappings":"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","sourcesContent":["import CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/display/autorefresh.js\";\r\nimport \"codemirror/addon/display/placeholder.js\";\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/fold/brace-fold.js\";\r\nimport \"codemirror/addon/fold/foldcode.js\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/addon/fold/foldgutter.js\";\r\nimport \"codemirror/addon/fold/indent-fold.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\r\nimport \"codemirror/addon/selection/active-line.js\";\r\nimport \"codemirror/mode/clike/clike.js\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"codemirror/theme/ayu-dark.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/theme/monokai.css\";\r\nimport \"codemirror/addon/display/fullscreen.css\";\r\nimport \"codemirror/addon/display/fullscreen.js\";\r\nimport React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Button, ButtonDropdown, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from \"reactstrap\";\r\nimport { c, cpp } from \"../data\";\r\nclass Editor extends React.Component {\r\n    InputRef=React.createRef();\r\n    secondRef=React.createRef();\r\n    exitRef=React.createRef();\r\n    state={\r\n        dropdownOpen:false,\r\n        oldvalue:null\r\n        \r\n    }\r\n    // readfile=async()=>{\r\n    //     await fetch(text, {mode: 'no-cors'})\r\n    //     .then(response => response.text())\r\n    //     .then(async(data) =>{\r\n    //         console.log(\"enter\");\r\n    //         await this.setvalue(data);\r\n    //     }\r\n    //         )\r\n    //     .catch(error => console.error(error));\r\n    //     console.log(\"hellow\");\r\n    // }\r\n    createcodemirror=()=>{\r\n        CodeMirror.commands.autocomplete=(cm)=>{\r\n            cm.showHint({hint:CodeMirror.hint.anyword});\r\n        }\r\n        const editor = CodeMirror.fromTextArea(this.InputRef.current,{\r\n            lineNumbers: true,\r\n            autoFocus:true,\r\n            autoCloseBrackets: true,\r\n            matchBrackets:true,\r\n            styleActiveLine:true,\r\n            lineWrapping:true,\r\n            undoDepth:300,\r\n            extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); },\r\n                \"Ctrl-Space\":\"autocomplete\",\r\n                \"F11\": function(cm){\r\n                    cm.setOption(\"fullScreen\",true);\r\n                },\r\n                \"Esc\": function(cm){\r\n                    cm.setOption(\"fullScreen\",false);\r\n                }\r\n            },  \r\n            foldGutter:true,\r\n            gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\",\"error\"],\r\n            autoRefresh:true,\r\n            theme:\"blackboard\",\r\n            electricChars:true,\r\n            indentUnit:4,\r\n            \r\n        });\r\n        editor.setSize(\"\",\"570\");\r\n        editor.getWrapperElement().style[\"font-size\"]=\"15px\";\r\n        editor.refresh();\r\n        editor.setValue(\"please select your language first..\");\r\n        this.props.seteditor(editor);\r\n        editor.on('change',function(){\r\n            \r\n        });\r\n    }\r\n    componentDidMount(){\r\n       this.createcodemirror();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({dropdownOpen:!this.state.dropdownOpen});\r\n    }\r\n    updatevalue=(event)=>{\r\n        if(this.state.oldvalue !== event.currentTarget.textContent){\r\n            switch (event.currentTarget.textContent) {\r\n                case \"C++\":\r\n                    this.props.setmode(\"C++\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                    this.props.editor.setValue(cpp);\r\n                    break;\r\n                case \"C\":\r\n                    this.props.setmode(\"C\");\r\n                    this.props.editor.setOption(\"mode\",\"text/x-csrc\");\r\n                    this.props.editor.setValue(c);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if(this.props.issaved){\r\n                this.props.setsaved();\r\n            }\r\n            this.setState({oldvalue:event.currentTarget.textContent});\r\n\r\n            this.props.setdropdown(event.currentTarget.textContent);\r\n        }\r\n    }\r\n    handlesave=()=>{\r\n        if(!this.props.issaved){\r\n            this.props.toggle();\r\n        }\r\n        else{\r\n            const name=this.props.status;\r\n            console.log(name);\r\n            this.props.setstatus(\"Saving...\");\r\n            setTimeout(() => {\r\n                this.props.setstatus(name);\r\n            }, 1000);\r\n        }\r\n    }\r\n    fullscreen=()=>{\r\n        const ele= this.props.editor.getWrapperElement();\r\n        ele.requestFullscreen({ navigationUI: \"show\" }).then(()=>{\r\n        })\r\n    }\r\n    \r\n    handleshare=()=>{\r\n        if(!this.props.issaved){\r\n            this.props.toggle();\r\n\r\n        }\r\n        else{\r\n            this.props.setshare();\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"editor\" ref={this.secondRef}>\r\n                        <div className=\"editor-nav\">\r\n                        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{marginLeft:\"5px\",height:\"100%\"}}>\r\n                            <DropdownToggle caret size=\"sm\"style={{backgroundColor:\"whitesmoke\",color:\"black\",border:\"block\"}}>\r\n                                {!this.props.dropdownvalue?\"Language\":this.props.dropdownvalue}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu style={{width:\"200px\"}}>\r\n                                <DropdownItem active style={{marginRight:\"0px\"}} onClick={this.updatevalue} dropdownvalue=\"click\">C++</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>C</DropdownItem>\r\n                            </DropdownMenu> \r\n                        </ButtonDropdown>\r\n                        <Button  size=\"sm\" data-tip data-for=\"FullscreenMode\" onClick={this.fullscreen}><i class=\"fas fa-expand\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"FullscreenMode\" place=\"top\" effect=\"solid\">\r\n                            FullScreen\r\n                        </ReactTooltip>\r\n                        <Button  data-tip data-for=\"Share\" size=\"sm\" onClick={this.handleshare}><i className=\"fas fa-share-alt\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"Share\" place=\"top\" effect=\"solid\">\r\n                            {this.props.dropdownvalue===\"\"?\"Choose language first!\":!this.props.issaved? \"File saved before Share\" : \"Share\"}\r\n                        </ReactTooltip>\r\n                        <Button data-tip data-for=\"save\" size=\"sm\" onClick={this.handlesave} ><i className=\"fas fa-save\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <ReactTooltip id=\"save\" place=\"top\" effect=\"solid\">\r\n                        {this.props.dropdownvalue===\"\"?\"Choose language first!\":\"Save\"}\r\n                        </ReactTooltip>    \r\n                        <span style={{color:\"blue\", float:\"right\",paddingTop:\"10px\",fontSize:\"16px\",fontWeight:\"300\",paddingRight:\"17px\"}}>{!this.props.issaved ? \"Unsaved\": this.props.status}</span>\r\n                        </div>\r\n                        <div className=\"codemirror\">\r\n                            <textarea ref={this.InputRef} autoCapitalize=\"false\" tabIndex=\"4\" style={{position:\"relative\"}}>\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"btn hideit\" ref={this.exitRef}>\r\n                            <Button className=\"exitfullscreen\" size=\"sm\"><i className=\"fas fa-compress\" style={{fontSize:\"26px\",fontStyle:\"bold\"}}></i></Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}