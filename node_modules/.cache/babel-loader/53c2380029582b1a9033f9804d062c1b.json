{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship Project\\\\codebix\\\\src\\\\components\\\\Editor.js\";\nimport React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport CodeMirror from \"codemirror\";\nimport { cpp, c } from \"../data\";\nimport \"codemirror/addon/edit/closebrackets.js\";\nimport \"codemirror/addon/edit/matchbrackets.js\";\nimport \"codemirror/addon/hint/anyword-hint.js\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/selection/active-line.js\";\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\nimport \"codemirror/addon/fold/foldcode.js\";\nimport \"codemirror/addon/fold/foldgutter.js\";\nimport \"codemirror/addon/fold/foldgutter.css\";\nimport \"codemirror/addon/fold/brace-fold.js\";\nimport \"codemirror/addon/fold/indent-fold.js\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/addon/display/autorefresh.js\";\nimport \"codemirror/addon/display/placeholder.js\";\nimport \"codemirror/mode/clike/clike.js\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/theme/ayu-dark.css\";\nimport \"codemirror/theme/base16-light.css\";\nimport \"codemirror/theme/blackboard.css\";\n\nclass Editor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.InputRef = React.createRef();\n    this.state = {\n      dropdownOpen: false,\n      dropdownvalue: \"\",\n      editor: {}\n    };\n\n    this.createcodemirror = () => {\n      CodeMirror.commands.autocomplete = cm => {\n        cm.showHint({\n          hint: CodeMirror.hint.anyword\n        });\n      };\n\n      const editor = CodeMirror.fromTextArea(this.InputRef.current, {\n        lineNumbers: true,\n        autoFocus: true,\n        autoCloseBrackets: true,\n        matchBrackets: true,\n        styleActiveLine: true,\n        lineWrapping: true,\n        undoDepth: 300,\n        extraKeys: {\n          \"Ctrl-Q\": function (cm) {\n            cm.foldCode(cm.getCursor());\n          },\n          \"Ctrl-Space\": \"autocomplete\"\n        },\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"error\"],\n        autoRefresh: true,\n        theme: \"blackboard\"\n      });\n      editor.setSize(\"\", \"550\");\n      editor.setValue(\"please select your language first..\");\n      this.setState({\n        editor: editor\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.updatevalue = event => {\n      switch (event.currentTarget.textContent) {\n        case \"C++\":\n          this.state.editor.setOption(\"mode\", \"text/x-c++src\");\n          this.state.editor.setValue(cpp);\n          console.log(this.state.editor.getValue());\n          break;\n\n        case \"C\":\n          this.setState({\n            mode: \"text/x-csrc\"\n          });\n          this.state.editor.setValue(c);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        dropdownvalue: event.currentTarget.textContent\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.createcodemirror();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      style: {\n        marginLeft: \"5px\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      size: \"sm\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        color: \"black\",\n        border: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, !this.state.dropdownvalue ? \"Language\" : this.state.dropdownvalue), /*#__PURE__*/React.createElement(DropdownMenu, {\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      active: true,\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      dropdownvalue: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \"C++\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      style: {\n        marginRight: \"0px\"\n      },\n      onClick: this.updatevalue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"C\"))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compress\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-share-alt\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-save\",\n      style: {\n        fontSize: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 43\n      }\n    }))), /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        width: \"100%\",\n        border: \"none\"\n      },\n      ref: this.InputRef,\n      autoCapitalize: \"false\",\n      tabIndex: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["E:/Internship Project/codebix/src/components/Editor.js"],"names":["React","Row","Col","Button","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","CodeMirror","cpp","c","Editor","Component","InputRef","createRef","state","dropdownOpen","dropdownvalue","editor","createcodemirror","commands","autocomplete","cm","showHint","hint","anyword","fromTextArea","current","lineNumbers","autoFocus","autoCloseBrackets","matchBrackets","styleActiveLine","lineWrapping","undoDepth","extraKeys","foldCode","getCursor","foldGutter","gutters","autoRefresh","theme","setSize","setValue","setState","toggle","updatevalue","event","currentTarget","textContent","setOption","console","log","getValue","mode","componentDidMount","render","marginLeft","height","backgroundColor","color","border","width","marginRight","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row,Col,Button} from \"reactstrap\";\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport CodeMirror from \"codemirror\";\r\nimport {cpp,c} from \"../data\";\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror/addon/selection/active-line.js\";\r\nimport \"codemirror/addon/scroll/annotatescrollbar.js\";\r\nimport \"codemirror/addon/fold/foldcode.js\";\r\nimport \"codemirror/addon/fold/foldgutter.js\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/addon/fold/brace-fold.js\";\r\nimport \"codemirror/addon/fold/indent-fold.js\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/addon/display/autorefresh.js\";\r\nimport \"codemirror/addon/display/placeholder.js\";\r\nimport \"codemirror/mode/clike/clike.js\";\r\nimport \"codemirror/theme/monokai.css\";\r\nimport \"codemirror/theme/ayu-dark.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nclass Editor extends React.Component {\r\n    InputRef=React.createRef();\r\n    state={\r\n        dropdownOpen:false,\r\n        dropdownvalue:\"\",\r\n        editor:{}\r\n    }\r\n    // readfile=async()=>{\r\n    //     await fetch(text, {mode: 'no-cors'})\r\n    //     .then(response => response.text())\r\n    //     .then(async(data) =>{\r\n    //         console.log(\"enter\");\r\n    //         await this.setvalue(data);\r\n    //     }\r\n    //         )\r\n    //     .catch(error => console.error(error));\r\n    //     console.log(\"hellow\");\r\n    // }\r\n    createcodemirror=()=>{\r\n        CodeMirror.commands.autocomplete=(cm)=>{\r\n            cm.showHint({hint:CodeMirror.hint.anyword});\r\n        }\r\n        const editor = CodeMirror.fromTextArea(this.InputRef.current,{\r\n            lineNumbers: true,\r\n            autoFocus:true,\r\n            autoCloseBrackets: true,\r\n            matchBrackets:true,\r\n            styleActiveLine:true,\r\n            lineWrapping:true,\r\n            undoDepth:300,\r\n            extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); },\r\n                \"Ctrl-Space\":\"autocomplete\"\r\n            },\r\n            foldGutter:true,\r\n            gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\",\"error\"],\r\n            autoRefresh:true,\r\n            theme:\"blackboard\"\r\n        });\r\n        editor.setSize(\"\",\"550\");\r\n        editor.setValue(\"please select your language first..\");\r\n        this.setState({editor:editor});\r\n    }\r\n    componentDidMount(){\r\n       this.createcodemirror();\r\n    }\r\n    toggle=()=>{\r\n        this.setState({dropdownOpen:!this.state.dropdownOpen});\r\n    }\r\n    updatevalue=(event)=>{\r\n        switch (event.currentTarget.textContent) {\r\n            case \"C++\":\r\n                this.state.editor.setOption(\"mode\",\"text/x-c++src\");\r\n                this.state.editor.setValue(cpp);\r\n                console.log(this.state.editor.getValue());\r\n                break;\r\n            case \"C\":\r\n                this.setState({mode:\"text/x-csrc\"});\r\n                this.state.editor.setValue(c);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({dropdownvalue: event.currentTarget.textContent}); \r\n    }\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"editor\">\r\n                        <div className=\"editor-nav\">\r\n                        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{marginLeft:\"5px\",height:\"100%\"}}>\r\n                            <DropdownToggle caret size=\"sm\"style={{backgroundColor:\"whitesmoke\",color:\"black\",border:\"block\"}}>\r\n                                {!this.state.dropdownvalue?\"Language\":this.state.dropdownvalue}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu style={{width:\"200px\"}}>\r\n                                <DropdownItem active style={{marginRight:\"0px\"}} onClick={this.updatevalue} dropdownvalue=\"click\">C++</DropdownItem>\r\n                                <DropdownItem style={{marginRight:\"0px\"}} onClick={this.updatevalue}>C</DropdownItem>\r\n                            </DropdownMenu> \r\n                        </ButtonDropdown>\r\n                        <Button  size=\"sm\"><i className=\"fas fa-compress\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <Button  size=\"sm\"><i className=\"fas fa-share-alt\" style={{fontSize:\"19px\"}}></i></Button>\r\n                        <Button size=\"sm\"><i className=\"fas fa-save\" style={{fontSize:\"19px\"}}></   i></Button>    \r\n                        </div>\r\n                        <textarea style={{width:\"100%\",border:\"none\"}} ref={this.InputRef} autoCapitalize=\"false\" tabIndex=\"4\">\r\n                        </textarea>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}