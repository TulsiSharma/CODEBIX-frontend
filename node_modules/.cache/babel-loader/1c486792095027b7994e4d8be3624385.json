{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"scrollPastEnd\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"change\", onChange);\n      cm.off(\"refresh\", updateBottomMargin);\n      cm.display.lineSpace.parentNode.style.paddingBottom = \"\";\n      cm.state.scrollPastEndPadding = null;\n    }\n\n    if (val) {\n      cm.on(\"change\", onChange);\n      cm.on(\"refresh\", updateBottomMargin);\n      updateBottomMargin(cm);\n    }\n  });\n\n  function onChange(cm, change) {\n    if (CodeMirror.changeEnd(change).line == cm.lastLine()) updateBottomMargin(cm);\n  }\n\n  function updateBottomMargin(cm) {\n    var padding = \"\";\n\n    if (cm.lineCount() > 1) {\n      var totalH = cm.display.scroller.clientHeight - 30,\n          lastLineH = cm.getLineHandle(cm.lastLine()).height;\n      padding = totalH - lastLineH + \"px\";\n    }\n\n    if (cm.state.scrollPastEndPadding != padding) {\n      cm.state.scrollPastEndPadding = padding;\n      cm.display.lineSpace.parentNode.style.paddingBottom = padding;\n      cm.off(\"refresh\", updateBottomMargin);\n      cm.setSize();\n      cm.on(\"refresh\", updateBottomMargin);\n    }\n  }\n});","map":{"version":3,"sources":["E:/Internship Project/codebix/node_modules/codemirror/addon/scroll/scrollpastend.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","off","onChange","updateBottomMargin","display","lineSpace","parentNode","style","paddingBottom","state","scrollPastEndPadding","on","change","changeEnd","line","lastLine","padding","lineCount","totalH","scroller","clientHeight","lastLineH","getLineHandle","height","setSize"],"mappings":"AAAA;AACA;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,OAAOC,OAAP,IAAkB,QAAlB,IAA8B,OAAOC,MAAP,IAAiB,QAAnD,EAA6D;AAC3DF,IAAAA,GAAG,CAACG,OAAO,CAAC,sBAAD,CAAR,CAAH,CADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAClDD,IAAAA,MAAM,CAAC,CAAC,sBAAD,CAAD,EAA2BJ,GAA3B,CAAN,CADG,KAEA;AACHA,IAAAA,GAAG,CAACM,UAAD,CAAH;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACtB;;AAEAA,EAAAA,UAAU,CAACC,YAAX,CAAwB,eAAxB,EAAyC,KAAzC,EAAgD,UAASC,EAAT,EAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AACrE,QAAIA,GAAG,IAAIA,GAAG,IAAIJ,UAAU,CAACK,IAA7B,EAAmC;AACjCH,MAAAA,EAAE,CAACI,GAAH,CAAO,QAAP,EAAiBC,QAAjB;AACAL,MAAAA,EAAE,CAACI,GAAH,CAAO,SAAP,EAAkBE,kBAAlB;AACAN,MAAAA,EAAE,CAACO,OAAH,CAAWC,SAAX,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCC,aAAtC,GAAsD,EAAtD;AACAX,MAAAA,EAAE,CAACY,KAAH,CAASC,oBAAT,GAAgC,IAAhC;AACD;;AACD,QAAIZ,GAAJ,EAAS;AACPD,MAAAA,EAAE,CAACc,EAAH,CAAM,QAAN,EAAgBT,QAAhB;AACAL,MAAAA,EAAE,CAACc,EAAH,CAAM,SAAN,EAAiBR,kBAAjB;AACAA,MAAAA,kBAAkB,CAACN,EAAD,CAAlB;AACD;AACF,GAZD;;AAcA,WAASK,QAAT,CAAkBL,EAAlB,EAAsBe,MAAtB,EAA8B;AAC5B,QAAIjB,UAAU,CAACkB,SAAX,CAAqBD,MAArB,EAA6BE,IAA7B,IAAqCjB,EAAE,CAACkB,QAAH,EAAzC,EACEZ,kBAAkB,CAACN,EAAD,CAAlB;AACH;;AAED,WAASM,kBAAT,CAA4BN,EAA5B,EAAgC;AAC9B,QAAImB,OAAO,GAAG,EAAd;;AACA,QAAInB,EAAE,CAACoB,SAAH,KAAiB,CAArB,EAAwB;AACtB,UAAIC,MAAM,GAAGrB,EAAE,CAACO,OAAH,CAAWe,QAAX,CAAoBC,YAApB,GAAmC,EAAhD;AAAA,UACIC,SAAS,GAAGxB,EAAE,CAACyB,aAAH,CAAiBzB,EAAE,CAACkB,QAAH,EAAjB,EAAgCQ,MADhD;AAEAP,MAAAA,OAAO,GAAIE,MAAM,GAAGG,SAAV,GAAuB,IAAjC;AACD;;AACD,QAAIxB,EAAE,CAACY,KAAH,CAASC,oBAAT,IAAiCM,OAArC,EAA8C;AAC5CnB,MAAAA,EAAE,CAACY,KAAH,CAASC,oBAAT,GAAgCM,OAAhC;AACAnB,MAAAA,EAAE,CAACO,OAAH,CAAWC,SAAX,CAAqBC,UAArB,CAAgCC,KAAhC,CAAsCC,aAAtC,GAAsDQ,OAAtD;AACAnB,MAAAA,EAAE,CAACI,GAAH,CAAO,SAAP,EAAkBE,kBAAlB;AACAN,MAAAA,EAAE,CAAC2B,OAAH;AACA3B,MAAAA,EAAE,CAACc,EAAH,CAAM,SAAN,EAAiBR,kBAAjB;AACD;AACF;AACF,CA5CD","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"scrollPastEnd\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"change\", onChange);\n      cm.off(\"refresh\", updateBottomMargin);\n      cm.display.lineSpace.parentNode.style.paddingBottom = \"\";\n      cm.state.scrollPastEndPadding = null;\n    }\n    if (val) {\n      cm.on(\"change\", onChange);\n      cm.on(\"refresh\", updateBottomMargin);\n      updateBottomMargin(cm);\n    }\n  });\n\n  function onChange(cm, change) {\n    if (CodeMirror.changeEnd(change).line == cm.lastLine())\n      updateBottomMargin(cm);\n  }\n\n  function updateBottomMargin(cm) {\n    var padding = \"\";\n    if (cm.lineCount() > 1) {\n      var totalH = cm.display.scroller.clientHeight - 30,\n          lastLineH = cm.getLineHandle(cm.lastLine()).height;\n      padding = (totalH - lastLineH) + \"px\";\n    }\n    if (cm.state.scrollPastEndPadding != padding) {\n      cm.state.scrollPastEndPadding = padding;\n      cm.display.lineSpace.parentNode.style.paddingBottom = padding;\n      cm.off(\"refresh\", updateBottomMargin);\n      cm.setSize();\n      cm.on(\"refresh\", updateBottomMargin);\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"script"}